<TaskerData sr="" dvi="1" tv="6.3.13">
	<dmetric>1080.0,2158.0</dmetric>
	<Profile sr="prof32" ve="2">
		<cdate>1733778819026</cdate>
		<clp>true</clp>
		<edate>1739186501873</edate>
		<flags>8</flags>
		<id>32</id>
		<limit>true</limit>
		<mid0>83</mid0>
		<nme>Phone Ringing Listener</nme>
		<Event sr="con0" ve="2">
			<code>6</code>
			<Str sr="arg0" ve="3"/>
		</Event>
	</Profile>
	<Profile sr="prof33" ve="2">
		<cdate>1733778819028</cdate>
		<edate>1739186501260</edate>
		<flags>8</flags>
		<id>33</id>
		<limit>true</limit>
		<mid0>85</mid0>
		<nme>Missed Call Listener</nme>
		<Event sr="con0" ve="2">
			<code>2003</code>
			<Str sr="arg0" ve="3"/>
		</Event>
	</Profile>
	<Profile sr="prof34" ve="2">
		<cdate>1733778819030</cdate>
		<clp>true</clp>
		<edate>1740048327675</edate>
		<flags>8</flags>
		<id>34</id>
		<limit>true</limit>
		<mid0>84</mid0>
		<nme>Assistant Listener</nme>
		<Event sr="con0" ve="2">
			<code>201</code>
			<App sr="arg0"/>
			<Str sr="arg1" ve="3"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
		</Event>
	</Profile>
	<Profile sr="prof42" ve="2">
		<cdate>1738232043913</cdate>
		<clp>true</clp>
		<edate>1738241308638</edate>
		<flags>8</flags>
		<id>42</id>
		<limit>true</limit>
		<mid0>81</mid0>
		<nme>Force VC Assistant Launcher</nme>
		<App sr="con0" ve="2">
			<cls0>com.google.android.apps.googleassistant.AssistantActivity</cls0>
			<cls1>com.google.android.apps.search.assistant.surfaces.voice.robin.launcher.RobinEntryPointActivity</cls1>
			<cls2>com.google.android.googlequicksearchbox.SearchActivity</cls2>
			<flags>2</flags>
			<label0>Assistant</label0>
			<label1>Gemini</label1>
			<label2>Google</label2>
			<pkg0>com.google.android.apps.googleassistant</pkg0>
			<pkg1>com.google.android.googlequicksearchbox</pkg1>
			<pkg2>com.google.android.googlequicksearchbox</pkg2>
		</App>
	</Profile>
	<Project sr="proj0" ve="2">
		<cdate>1723611477600</cdate>
		<name>Voice Commands</name>
		<pids>32,34,33,42</pids>
		<scenes>Custom Toast,Voice Commands,CMD installation screen,Command Add Manual,Settings,CMD Edit,Alert,Advance Settings</scenes>
		<tids>57,89,35,60,41,40,38,28,62,58,87,64,6,55,12,85,88,84,63,90,82,45,31,53,14,11,8,83,23,3,2,20,46,54,25,48,81,30,29,59,13,16,27,56,44,91,26,24,22,80,61,49,10,4,15,19,18,7,43,17,37,36,39,21,52,65,50,9,51</tids>
		<Kid sr="Kid">
			<launchID>4</launchID>
			<pkg>n.paul.voice.commands</pkg>
			<vTarg>29</vTarg>
			<vnme>1.0.0 (by N Paul)</vnme>
			<vnum>99</vnum>
		</Kid>
		<Img sr="icon" ve="2">
			<fle>/storage/emulated/0/Download/Voice Command JS Support library/Voice Commands Logo/Voice Commands logo.png</fle>
		</Img>
	</Project>
	<Scene sr="sceneAdvance Settings">
		<cdate>1735126800062</cdate>
		<edate>1735767813728</edate>
		<gridSize>6</gridSize>
		<heightLand>-1</heightLand>
		<heightPort>1336</heightPort>
		<nme>Advance Settings</nme>
		<widthLand>-1</widthLand>
		<widthPort>1040</widthPort>
		<RectElement sr="elements0">
			<flags>4</flags>
			<geom>0,0,1039,1172,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Rectangle For Base</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<RectElement sr="elements1">
			<flags>4</flags>
			<geom>0,1195,467,141,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Rectangle For Close Button</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<TextElement sr="elements10" ve="3">
			<clickTask>62</clickTask>
			<flags>4</flags>
			<geom>23,560,805,76,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Info about custom VCL installer</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Use custom .vcl installer (?)&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="2"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<SwitchElement sr="elements11">
			<checkchangeTask>60</checkchangeTask>
			<flags>4</flags>
			<geom>820,554,196,81,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Custom VCL Installer Switch</Str>
			<Int sr="arg1" val="0"/>
		</SwitchElement>
		<EditTextElement sr="elements12" ve="3">
			<flags>4</flags>
			<geom>17,1051,996,99,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Stop Key</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0065FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="30"/>
		</EditTextElement>
		<TextElement sr="elements13" ve="3">
			<flags>4</flags>
			<geom>17,1016,1005,44,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Info about Stop Key</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Stop Keyword&lt;/b&gt;</Str>
			<Int sr="arg2">
				<var>5</var>
			</Int>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="2"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements14" ve="3">
			<clickTask>53</clickTask>
			<flags>4</flags>
			<geom>573,1201,467,133,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Save</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Save&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF00AF47</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements15" ve="3">
			<clickTask>58</clickTask>
			<flags>4</flags>
			<geom>0,1196,467,133,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Close</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Close&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFAF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<RectElement sr="elements2">
			<flags>4</flags>
			<geom>566,1196,470,141,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Rectangle For Save Button</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<RectElement sr="elements3">
			<flags>4</flags>
			<geom>17,34,1005,483,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">TTS Language</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFE5E2E2</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="2"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<RectElement sr="elements4">
			<flags>4</flags>
			<geom>17,554,1005,463,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">VCSL</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFE5E2E2</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="2"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<RectElement sr="elements5">
			<flags>4</flags>
			<geom>17,1057,1005,96,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">vcl Installer</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFE5E2E2</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="2"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<EditTextElement sr="elements6" ve="3">
			<flags>4</flags>
			<geom>23,121,993,388,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Custom VCSL Codes</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0065FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="5"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1000"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<TextElement sr="elements7" ve="3">
			<clickTask>61</clickTask>
			<flags>4</flags>
			<geom>17,40,808,76,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Info about custom VCSL</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Use Custom VC_SL (?)&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="2"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<SwitchElement sr="elements8">
			<checkchangeTask>59</checkchangeTask>
			<flags>4</flags>
			<geom>820,34,196,81,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Custom VCSL Switch</Str>
			<Int sr="arg1" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</SwitchElement>
		<EditTextElement sr="elements9" ve="3">
			<flags>4</flags>
			<geom>23,647,993,364,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Custom VCL Installer Codes</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0065FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="5"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1000"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<PropertiesElement sr="props">
			<keyTask>46</keyTask>
			<Int sr="arg0" val="2"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">Advance Settings</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneAlert">
		<cdate>1734699633538</cdate>
		<edate>1735931388853</edate>
		<heightLand>-1</heightLand>
		<heightPort>790</heightPort>
		<nme>Alert</nme>
		<widthLand>-1</widthLand>
		<widthPort>846</widthPort>
		<RectElement sr="elements0">
			<flags>4</flags>
			<geom>0,0,845,613,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Rectangle1</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<TextElement sr="elements1" ve="3">
			<clickTask>49</clickTask>
			<flags>4</flags>
			<geom>0,637,845,152,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">OK</Str>
			<Str sr="arg1" ve="3">OK</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0054FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#FFFFFFFF</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements2" ve="3">
			<flags>4</flags>
			<geom>0,0,845,103,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Alert</Str>
			<Str sr="arg1" ve="3">&lt;h2&gt;Alert!&lt;/h2&gt;</Str>
			<Int sr="arg2" val="14"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements3" ve="3">
			<flags>4</flags>
			<geom>0,103,845,510,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Actual Alert Text</Str>
			<Str sr="arg1" ve="3">%vcl_installer_status</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="2"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<PropertiesElement sr="props">
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">Alert</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneCMD Edit">
		<cdate>1725460431339</cdate>
		<edate>1740173375085</edate>
		<gridSize>4</gridSize>
		<heightLand>-1</heightLand>
		<heightPort>411</heightPort>
		<nme>CMD Edit</nme>
		<widthLand>-1</widthLand>
		<widthPort>915</widthPort>
		<RectElement sr="elements0">
			<flags>4</flags>
			<geom>0,0,914,411,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Background</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<EditTextElement sr="elements1" ve="3">
			<flags>4</flags>
			<geom>23,196,860,113,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Keys</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1000"/>
		</EditTextElement>
		<TextElement sr="elements2" ve="3">
			<flags>4</flags>
			<geom>0,0,914,77,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Title</Str>
			<Str sr="arg1" ve="3">&lt;h3&gt;Command Edit&lt;/h3&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements3" ve="3">
			<flags>4</flags>
			<geom>23,81,864,99,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Command Infos</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="5"/>
			<Int sr="arg7" val="2"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements4" ve="3">
			<clickTask>18</clickTask>
			<flags>4</flags>
			<geom>742,318,172,92,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Save</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Save&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF00AF47</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements5" ve="3">
			<clickTask>19</clickTask>
			<flags>4</flags>
			<geom>532,315,172,95,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cancel</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Cancel&lt;b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFAF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<PropertiesElement sr="props">
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFF3F3</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">CMD Edit</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneCMD installation screen">
		<cdate>1724949789589</cdate>
		<edate>1735041874034</edate>
		<gridSize>0</gridSize>
		<heightLand>-1</heightLand>
		<heightPort>612</heightPort>
		<nme>CMD installation screen</nme>
		<widthLand>-1</widthLand>
		<widthPort>1026</widthPort>
		<RectElement sr="elements0">
			<flags>4</flags>
			<geom>0,0,1025,611,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Background</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<TextElement sr="elements1" ve="3">
			<clickTask>50</clickTask>
			<flags>4</flags>
			<geom>589,468,275,143,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text1</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Install&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF00AF47</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements2" ve="3">
			<clickTask>51</clickTask>
			<flags>4</flags>
			<geom>159,462,275,143,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text2</Str>
			<Str sr="arg1" ve="3">&lt;/b&gt;Don't Install&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFAF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements3" ve="3">
			<flags>4</flags>
			<geom>0,0,1025,67,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text3</Str>
			<Str sr="arg1" ve="3">&lt;h3&gt;Command installation from .vcl file&lt;/h3&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements4" ve="3">
			<flags>4</flags>
			<geom>13,118,992,339,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Command Details</Str>
			<Str sr="arg1" ve="3">&lt;p style='color:blue' &gt; &lt;b&gt;Command Name:&lt;/b&gt; %cmd_temp_name &lt;/p&gt;
&lt;p style='color:blue'&gt; &lt;b&gt;Author:&lt;/b&gt; %cmd_temp_author &lt;/p&gt;
&lt;p style='color:blue'&gt; &lt;b&gt;Version:&lt;/b&gt; %cmd_temp_version &lt;/p&gt;
&lt;p style='color:blue'&gt; &lt;b&gt;Keywords:&lt;/b&gt; %cmd_temp_keywords &lt;/p&gt;
&lt;p style='color:black'&gt; %cmd_temp_description &lt;/p&gt;</Str>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="5"/>
			<Int sr="arg7" val="2"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements5" ve="3">
			<flags>4</flags>
			<geom>0,59,1025,67,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text4</Str>
			<Str sr="arg1" ve="3">Are you want to install this command?</Str>
			<Int sr="arg2" val="9"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0018FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<PropertiesElement sr="props">
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">Dialog</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneCommand Add Manual">
		<cdate>1724088370704</cdate>
		<edate>1734699644383</edate>
		<gridSize>1</gridSize>
		<heightLand>-1</heightLand>
		<heightPort>1170</heightPort>
		<nme>Command Add Manual</nme>
		<widthLand>-1</widthLand>
		<widthPort>1014</widthPort>
		<RectElement sr="elements0">
			<flags>4</flags>
			<geom>0,0,1013,1169,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Background</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<TextElement sr="elements1" ve="3">
			<flags>4</flags>
			<geom>0,0,690,147,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text1</Str>
			<Str sr="arg1" ve="3">&lt;h3&gt;Command add (manual)&lt;/h3&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<EditTextElement sr="elements10" ve="3">
			<flags>4</flags>
			<geom>17,322,322,66,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cmd_author_name</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="101"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="30"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<TextElement sr="elements11" ve="3">
			<flags>4</flags>
			<geom>15,280,325,48,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Author Name</Str>
			<Str sr="arg1" ve="3">Author name:</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<EditTextElement sr="elements12" ve="3">
			<flags>4</flags>
			<geom>12,449,326,105,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cmd_version</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="101"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="30"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<TextElement sr="elements13" ve="3">
			<flags>4</flags>
			<geom>15,401,325,46,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Command Version</Str>
			<Str sr="arg1" ve="3">Command version:</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<TextElement sr="elements14" ve="3">
			<clickTask>7</clickTask>
			<flags>4</flags>
			<geom>686,0,157,148,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Save</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Save&lt;/b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF00AF47</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements15" ve="3">
			<clickTask>16</clickTask>
			<flags>4</flags>
			<geom>835,0,171,148,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cancel</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Cancel&lt;b&gt;</Str>
			<Int sr="arg2" val="12"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFAF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<EditTextElement sr="elements2" ve="3">
			<flags>4</flags>
			<geom>16,605,967,533,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cmd_codes</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="5"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1000"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="8"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<EditTextElement sr="elements3" ve="3">
			<flags>4</flags>
			<geom>364,212,613,103,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cmd_keywords</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF004BFF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="50"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="4"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<EditTextElement sr="elements4" ve="3">
			<flags>4</flags>
			<geom>11,202,334,76,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cmd_name</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="30"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<TextElement sr="elements5" ve="3">
			<flags>4</flags>
			<geom>13,146,337,46,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Name</Str>
			<Str sr="arg1" ve="3">Name:</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<TextElement sr="elements6" ve="3">
			<flags>4</flags>
			<geom>360,149,616,61,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Keywords</Str>
			<Str sr="arg1" ve="3">Keywords:</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<TextElement sr="elements7" ve="3">
			<flags>4</flags>
			<geom>16,562,969,45,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Codes</Str>
			<Str sr="arg1" ve="3">Codes:</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0F00FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<EditTextElement sr="elements8" ve="3">
			<flags>4</flags>
			<geom>349,379,629,172,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Cmd_description</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF004BFF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="5"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="500"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="4"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<TextElement sr="elements9" ve="3">
			<flags>4</flags>
			<geom>346,324,635,59,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Description</Str>
			<Str sr="arg1" ve="3">Description:</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<PropertiesElement sr="props">
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">#00000000</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">Edit Screen</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneCustom Toast">
		<cdate>1735905016754</cdate>
		<edate>1735929574916</edate>
		<heightLand>-1</heightLand>
		<heightPort>574</heightPort>
		<nme>Custom Toast</nme>
		<widthLand>-1</widthLand>
		<widthPort>882</widthPort>
		<TextElement sr="elements0" ve="3">
			<flags>4</flags>
			<geom>0,0,881,574,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text For Custom Toast</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="15"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFFFFFF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#CB1E1B1B</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#6FFFFFFF</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<PropertiesElement sr="props">
			<keyTask>48</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">Visual Feedback</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneSettings">
		<cdate>1726067152297</cdate>
		<edate>1740215586845</edate>
		<gridSize>1</gridSize>
		<heightLand>-1</heightLand>
		<heightPort>2160</heightPort>
		<nme>Settings</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<RectElement sr="elements0">
			<flags>4</flags>
			<geom>27,80,1024,675,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Rectangle1</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#61E9F2EE</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<RectElement sr="elements1">
			<flags>4</flags>
			<geom>27,819,1024,641,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Rectangle2</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#61E9F2EE</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<PickerElement sr="elements10">
			<flags>4</flags>
			<geom>802,1065,249,225,-1,-1,-1,40</geom>
			<Str sr="arg0" ve="3">Speed Number Picker</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="5"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</PickerElement>
		<TextElement sr="elements11" ve="3">
			<flags>4</flags>
			<geom>532,1068,270,225,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">TTS Speed Rate</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;TTS Speed Rate:&lt;/b&gt;</Str>
			<Int sr="arg2" val="14"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<SpinnerElement sr="elements12">
			<flags>4</flags>
			<geom>532,1303,507,168,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Option Per List Spinner</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Scene sr="arg3">
				<Scene sr="val">
					<cdate>1726766160525</cdate>
					<edate>1726766160525</edate>
					<heightLand>-1</heightLand>
					<heightPort>168</heightPort>
					<nme>spinner</nme>
					<widthLand>-1</widthLand>
					<widthPort>507</widthPort>
					<ImageElement sr="elements0" ve="2">
						<flags>1</flags>
						<geom>354,9,153,124,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Icon</Str>
						<Img sr="arg1" ve="2">
							<nme>hd_aaa_ext_tiles_small</nme>
						</Img>
						<Int sr="arg2" val="255"/>
					</ImageElement>
					<TextElement sr="elements1" ve="3">
						<flags>5</flags>
						<geom>4,33,502,100,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Label</Str>
						<Str sr="arg1" ve="3"/>
						<Int sr="arg2" val="14"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FF000000</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="0"/>
						<Int sr="arg7" val="1"/>
						<Int sr="arg8" val="0"/>
						<RectElement sr="background">
							<flags>4</flags>
							<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
							<Str sr="arg0" ve="3"/>
							<Int sr="arg1" val="0"/>
							<Str sr="arg2" ve="3"/>
							<Str sr="arg3" ve="3"/>
							<Int sr="arg4" val="0"/>
							<Str sr="arg5" ve="3">#FF000000</Str>
							<Int sr="arg6" val="0"/>
							<Int sr="arg7" val="0"/>
						</RectElement>
					</TextElement>
					<TextElement sr="elements2" ve="3">
						<flags>1</flags>
						<geom>15,15,96,137,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Index</Str>
						<Str sr="arg1" ve="3">1.</Str>
						<Int sr="arg2" val="22"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FFFFFFFF</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="3"/>
						<Int sr="arg7"/>
						<Int sr="arg8"/>
					</TextElement>
					<PropertiesElement sr="props">
						<Int sr="arg0" val="1"/>
						<Int sr="arg1" val="0"/>
						<Str sr="arg2" ve="3">#00000000</Str>
						<Int sr="arg3" val="0"/>
						<Str sr="arg4" ve="3">spinner</Str>
						<Str sr="arg5" ve="3"/>
						<Img sr="arg6" ve="2"/>
						<Str sr="arg7" ve="3"/>
					</PropertiesElement>
				</Scene>
			</Scene>
			<Str sr="arg4" ve="3">#E24DC5AA</Str>
			<ListElementItem sr="item0">
				<label>1 Option per list</label>
			</ListElementItem>
			<ListElementItem sr="item1">
				<label>2 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item10">
				<label>11 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item11">
				<label>12 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item12">
				<label>13 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item13">
				<label>14 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item14">
				<label>15 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item2">
				<label>3 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item3">
				<label>4 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item4">
				<label>5 Options per list</label>
				<sel>true</sel>
			</ListElementItem>
			<ListElementItem sr="item5">
				<label>6 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item6">
				<label>7 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item7">
				<label>8 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item8">
				<label>9 Options per list</label>
			</ListElementItem>
			<ListElementItem sr="item9">
				<label>10 Options per list</label>
			</ListElementItem>
		</SpinnerElement>
		<TextElement sr="elements13" ve="3">
			<flags>4</flags>
			<geom>27,180,424,125,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Assign command for assistant listener</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Assign command for assistant listener:&lt;/b&gt;</Str>
			<Int sr="arg2" val="7"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<SpinnerElement sr="elements14">
			<flags>4</flags>
			<geom>452,180,599,125,-1,-1,-1,-1</geom>
			<itemselectedTask>23</itemselectedTask>
			<Str sr="arg0" ve="3">Spinner For Assistant Command</Str>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%Cmd_lst</Str>
			<Scene sr="arg3">
				<Scene sr="val">
					<cdate>1732285356281</cdate>
					<edate>1732285356281</edate>
					<gridSize>21</gridSize>
					<heightLand>-1</heightLand>
					<heightPort>144</heightPort>
					<nme>spinner</nme>
					<widthLand>-1</widthLand>
					<widthPort>569</widthPort>
					<ImageElement sr="elements0" ve="2">
						<flags>1</flags>
						<geom>379,0,153,68,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Icon</Str>
						<Img sr="arg1" ve="2">
							<nme>hd_aaa_ext_tiles_small</nme>
						</Img>
						<Int sr="arg2" val="255"/>
					</ImageElement>
					<TextElement sr="elements1" ve="3">
						<flags>5</flags>
						<geom>0,0,569,123,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Label</Str>
						<Str sr="arg1" ve="3"/>
						<Int sr="arg2" val="6"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FF1200FF</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="5"/>
						<Int sr="arg7" val="1"/>
						<Int sr="arg8" val="2"/>
						<RectElement sr="background">
							<flags>4</flags>
							<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
							<Str sr="arg0" ve="3"/>
							<Int sr="arg1" val="0"/>
							<Str sr="arg2" ve="3">#E24DC5AA</Str>
							<Str sr="arg3" ve="3"/>
							<Int sr="arg4" val="0"/>
							<Str sr="arg5" ve="3">#FF000000</Str>
							<Int sr="arg6" val="0"/>
							<Int sr="arg7" val="0"/>
						</RectElement>
					</TextElement>
					<TextElement sr="elements2" ve="3">
						<flags>1</flags>
						<geom>15,0,96,68,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Index</Str>
						<Str sr="arg1" ve="3">1.</Str>
						<Int sr="arg2" val="22"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FFFFFFFF</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="3"/>
						<Int sr="arg7"/>
						<Int sr="arg8"/>
					</TextElement>
					<PropertiesElement sr="props">
						<Int sr="arg0" val="1"/>
						<Int sr="arg1" val="0"/>
						<Str sr="arg2" ve="3">#00000000</Str>
						<Int sr="arg3" val="0"/>
						<Str sr="arg4" ve="3">spinner</Str>
						<Str sr="arg5" ve="3"/>
						<Img sr="arg6" ve="2"/>
						<Str sr="arg7" ve="3"/>
					</PropertiesElement>
				</Scene>
			</Scene>
			<Str sr="arg4" ve="3"/>
		</SpinnerElement>
		<SwitchElement sr="elements15">
			<checkchangeTask>25</checkchangeTask>
			<flags>4</flags>
			<geom>802,305,249,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Phone Ringing Listener Switch</Str>
			<Int sr="arg1" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</SwitchElement>
		<TextElement sr="elements16" ve="3">
			<flags>4</flags>
			<geom>27,305,774,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Phone Ringing listener service</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Phone Ringing listener service:&lt;/b&gt;</Str>
			<Int sr="arg2" val="14"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements17" ve="3">
			<flags>4</flags>
			<geom>27,405,424,125,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Assign command for phone ringing listener</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Assign command for phone ringing listener:&lt;/b&gt;</Str>
			<Int sr="arg2" val="7"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<SpinnerElement sr="elements18">
			<flags>4</flags>
			<geom>452,405,599,125,-1,-1,-1,-1</geom>
			<itemselectedTask>26</itemselectedTask>
			<Str sr="arg0" ve="3">Spinner For Phone Ringing Command</Str>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%Cmd_lst</Str>
			<Scene sr="arg3">
				<Scene sr="val">
					<cdate>1732285356281</cdate>
					<edate>1732285356281</edate>
					<gridSize>21</gridSize>
					<heightLand>-1</heightLand>
					<heightPort>144</heightPort>
					<nme>spinner</nme>
					<widthLand>-1</widthLand>
					<widthPort>569</widthPort>
					<ImageElement sr="elements0" ve="2">
						<flags>1</flags>
						<geom>379,0,153,68,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Icon</Str>
						<Img sr="arg1" ve="2">
							<nme>hd_aaa_ext_tiles_small</nme>
						</Img>
						<Int sr="arg2" val="255"/>
					</ImageElement>
					<TextElement sr="elements1" ve="3">
						<flags>5</flags>
						<geom>0,0,569,123,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Label</Str>
						<Str sr="arg1" ve="3"/>
						<Int sr="arg2" val="6"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FF1200FF</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="5"/>
						<Int sr="arg7" val="1"/>
						<Int sr="arg8" val="2"/>
						<RectElement sr="background">
							<flags>4</flags>
							<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
							<Str sr="arg0" ve="3"/>
							<Int sr="arg1" val="0"/>
							<Str sr="arg2" ve="3">#E24DC5AA</Str>
							<Str sr="arg3" ve="3"/>
							<Int sr="arg4" val="0"/>
							<Str sr="arg5" ve="3">#FF000000</Str>
							<Int sr="arg6" val="0"/>
							<Int sr="arg7" val="0"/>
						</RectElement>
					</TextElement>
					<TextElement sr="elements2" ve="3">
						<flags>1</flags>
						<geom>15,0,96,68,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Index</Str>
						<Str sr="arg1" ve="3">1.</Str>
						<Int sr="arg2" val="22"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FFFFFFFF</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="3"/>
						<Int sr="arg7"/>
						<Int sr="arg8"/>
					</TextElement>
					<PropertiesElement sr="props">
						<Int sr="arg0" val="1"/>
						<Int sr="arg1" val="0"/>
						<Str sr="arg2" ve="3">#00000000</Str>
						<Int sr="arg3" val="0"/>
						<Str sr="arg4" ve="3">spinner</Str>
						<Str sr="arg5" ve="3"/>
						<Img sr="arg6" ve="2"/>
						<Str sr="arg7" ve="3"/>
					</PropertiesElement>
				</Scene>
			</Scene>
			<Str sr="arg4" ve="3"/>
		</SpinnerElement>
		<TextElement sr="elements19" ve="3">
			<flags>4</flags>
			<geom>27,530,774,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Missed Call listener service</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Missed Call listener service:&lt;/b&gt;</Str>
			<Int sr="arg2" val="14"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<RectElement sr="elements2">
			<flags>4</flags>
			<geom>27,1530,1024,600,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Rectangle3</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#61E9F2EE</Str>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
			<Int sr="arg6" val="30"/>
			<Int sr="arg7" val="0"/>
		</RectElement>
		<SwitchElement sr="elements20">
			<checkchangeTask>24</checkchangeTask>
			<flags>4</flags>
			<geom>802,530,249,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Missed Call Listener Switch</Str>
			<Int sr="arg1" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</SwitchElement>
		<TextElement sr="elements21" ve="3">
			<flags>4</flags>
			<geom>27,630,424,125,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Assign command for missed call listener</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Assign command for missed call listener:&lt;/b&gt;</Str>
			<Int sr="arg2" val="7"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<SpinnerElement sr="elements22">
			<flags>4</flags>
			<geom>452,630,599,125,-1,-1,-1,-1</geom>
			<itemselectedTask>27</itemselectedTask>
			<Str sr="arg0" ve="3">Spinner For Missed Call Command</Str>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%Cmd_lst</Str>
			<Scene sr="arg3">
				<Scene sr="val">
					<cdate>1732285356281</cdate>
					<edate>1732285356281</edate>
					<gridSize>21</gridSize>
					<heightLand>-1</heightLand>
					<heightPort>144</heightPort>
					<nme>spinner</nme>
					<widthLand>-1</widthLand>
					<widthPort>569</widthPort>
					<ImageElement sr="elements0" ve="2">
						<flags>1</flags>
						<geom>379,0,153,68,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Icon</Str>
						<Img sr="arg1" ve="2">
							<nme>hd_aaa_ext_tiles_small</nme>
						</Img>
						<Int sr="arg2" val="255"/>
					</ImageElement>
					<TextElement sr="elements1" ve="3">
						<flags>5</flags>
						<geom>0,0,569,123,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Label</Str>
						<Str sr="arg1" ve="3"/>
						<Int sr="arg2" val="6"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FF1200FF</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="5"/>
						<Int sr="arg7" val="1"/>
						<Int sr="arg8" val="2"/>
						<RectElement sr="background">
							<flags>4</flags>
							<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
							<Str sr="arg0" ve="3"/>
							<Int sr="arg1" val="0"/>
							<Str sr="arg2" ve="3">#E24DC5AA</Str>
							<Str sr="arg3" ve="3"/>
							<Int sr="arg4" val="0"/>
							<Str sr="arg5" ve="3">#FF000000</Str>
							<Int sr="arg6" val="0"/>
							<Int sr="arg7" val="0"/>
						</RectElement>
					</TextElement>
					<TextElement sr="elements2" ve="3">
						<flags>1</flags>
						<geom>15,0,96,68,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Index</Str>
						<Str sr="arg1" ve="3">1.</Str>
						<Int sr="arg2" val="22"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FFFFFFFF</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="3"/>
						<Int sr="arg7"/>
						<Int sr="arg8"/>
					</TextElement>
					<PropertiesElement sr="props">
						<Int sr="arg0" val="1"/>
						<Int sr="arg1" val="0"/>
						<Str sr="arg2" ve="3">#00000000</Str>
						<Int sr="arg3" val="0"/>
						<Str sr="arg4" ve="3">spinner</Str>
						<Str sr="arg5" ve="3"/>
						<Img sr="arg6" ve="2"/>
						<Str sr="arg7" ve="3"/>
					</PropertiesElement>
				</Scene>
			</Scene>
			<Str sr="arg4" ve="3"/>
		</SpinnerElement>
		<ButtonElement sr="elements23" ve="3">
			<clickTask>28</clickTask>
			<flags>4</flags>
			<geom>27,1798,399,150,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Update Contacts DB</Str>
			<Str sr="arg1" ve="3">Update Contacts DB</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Img sr="arg7" ve="2"/>
		</ButtonElement>
		<ButtonElement sr="elements24" ve="3">
			<clickTask>30</clickTask>
			<flags>4</flags>
			<geom>701,1800,349,150,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Get Permissions</Str>
			<Str sr="arg1" ve="3">Get Permissions</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Img sr="arg7" ve="2"/>
		</ButtonElement>
		<ButtonElement sr="elements25" ve="3">
			<clickTask>31</clickTask>
			<flags>4</flags>
			<geom>437,1800,274,150,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Clear Contacts DB</Str>
			<Str sr="arg1" ve="3">Clear Contacts DB</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Img sr="arg7" ve="2"/>
		</ButtonElement>
		<ButtonElement sr="elements26" ve="3">
			<clickTask>37</clickTask>
			<flags>4</flags>
			<geom>153,1966,272,148,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Reset</Str>
			<Str sr="arg1" ve="3">Reset</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Img sr="arg7" ve="2"/>
		</ButtonElement>
		<TextElement sr="elements27" ve="3">
			<clickTask>41</clickTask>
			<flags>4</flags>
			<geom>32,1537,1008,145,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Info</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;&lt;font color="red"&gt;Current assigned commands: &lt;/font&gt;&lt;/b&gt;
&lt;br&gt;
&lt;b&gt;&lt;font color="blue"&gt;Assistant Listener: %Assistant_listner_cmd[Name]
&lt;/font&gt;&lt;/b&gt;&lt;font color="blue"&gt;
,V: %Assistant_listner_cmd[Version]&lt;/font&gt;

&lt;br&gt;
&lt;b&gt;&lt;font color="blue"&gt;Phone Ringing Listener: %Phone_ringing_listner_cmd[Name]
&lt;/font&gt;&lt;/b&gt;&lt;font color="blue"&gt;
,V: %Phone_ringing_listner_cmd[Version]&lt;/font&gt;

&lt;br&gt;
&lt;b&gt;&lt;font color="blue"&gt;Missed Call Listener:
%Missed_call_listner_cmd[Name]
&lt;/font&gt;&lt;/b&gt;&lt;font color="blue"&gt;
,V: %Missed_call_listner_cmd[Version]
&lt;/font&gt;</Str>
			<Int sr="arg2" val="6"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFFFFFF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="2"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<SwitchElement sr="elements28">
			<flags>4</flags>
			<geom>253,828,159,97,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Visual Feedback Switch</Str>
			<Int sr="arg1" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</SwitchElement>
		<TextElement sr="elements29" ve="3">
			<flags>4</flags>
			<geom>28,819,219,109,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Visual Feedback</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Visual Feedback:&lt;/b&gt;</Str>
			<Int sr="arg2" val="6"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<TextElement sr="elements3" ve="3">
			<flags>4</flags>
			<geom>27,5,1049,75,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text1</Str>
			<Str sr="arg1" ve="3">Primary setting</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<TextElement sr="elements30" ve="3">
			<clickTask>64</clickTask>
			<flags>4</flags>
			<geom>173,1042,227,103,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">TTS Language</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0069DA</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements31" ve="3">
			<flags>4</flags>
			<geom>28,981,503,69,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">TTS language Adjustments</Str>
			<Str sr="arg1" ve="3">TTS language Adjustments:</Str>
			<Int sr="arg2" val="6"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF009FFF</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="1"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements32" ve="3">
			<clickTask>38</clickTask>
			<flags>4</flags>
			<geom>302,1374,236,74,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Save TTS Configurations BTN</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Save TTS Configurations&lt;/b&gt;</Str>
			<Int sr="arg2" val="6"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0059FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#FF06EBBD</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements33" ve="3">
			<clickTask>14</clickTask>
			<flags>4</flags>
			<geom>34,1372,262,74,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Default TTS Configurations BTN</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Default TTS Configurations&lt;/b&gt;</Str>
			<Int sr="arg2" val="6"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFFF0000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#FFFCE1EF</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements34" ve="3">
			<clickTask>15</clickTask>
			<flags>4</flags>
			<geom>404,1042,135,101,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Default Language</Str>
			<Str sr="arg1" ve="3">Default language</Str>
			<Int sr="arg2" val="6"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0F1712</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#FF14D1FF</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements35" ve="3">
			<clickTask>44</clickTask>
			<flags>4</flags>
			<geom>38,1264,487,72,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text20</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Preview&lt;/b&gt;</Str>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FFB000FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#7FD9D95F</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements36" ve="3">
			<clickTask>8</clickTask>
			<flags>4</flags>
			<geom>27,1040,147,104,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Language</Str>
			<Str sr="arg1" ve="3">Language</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF0B3994</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<SwitchElement sr="elements37">
			<checkchangeTask>36</checkchangeTask>
			<flags>4</flags>
			<geom>792,1684,249,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Force VC Assistant Launcher Switch</Str>
			<Int sr="arg1" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</SwitchElement>
		<TextElement sr="elements38" ve="3">
			<clickTask>80</clickTask>
			<flags>4</flags>
			<geom>35,1684,774,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Force Voice Command Assistant Launcher Service</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Force Voice Command Assistant Launcher Service (?):&lt;/b&gt;</Str>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<ButtonElement sr="elements39" ve="3">
			<clickTask>91</clickTask>
			<flags>4</flags>
			<geom>699,1966,247,150,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">About</Str>
			<Str sr="arg1" ve="3">About</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Img sr="arg7" ve="2"/>
		</ButtonElement>
		<TextElement sr="elements4" ve="3">
			<flags>4</flags>
			<geom>0,755,1079,75,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text2</Str>
			<Str sr="arg1" ve="3">Adjustments</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<TextElement sr="elements5" ve="3">
			<flags>4</flags>
			<geom>0,1455,1079,75,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text3</Str>
			<Str sr="arg1" ve="3">Extra</Str>
			<Int sr="arg2" val="8"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</TextElement>
		<SwitchElement sr="elements6">
			<checkchangeTask>22</checkchangeTask>
			<flags>4</flags>
			<geom>802,80,249,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Assistant Listener Switch</Str>
			<Int sr="arg1" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</SwitchElement>
		<TextElement sr="elements7" ve="3">
			<flags>4</flags>
			<geom>27,80,774,100,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Assistant listener service</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Assistant listener service:&lt;/b&gt;</Str>
			<Int sr="arg2" val="14"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<PickerElement sr="elements8">
			<flags>4</flags>
			<geom>802,830,249,225,-1,-1,-1,40</geom>
			<Str sr="arg0" ve="3">Pitch Number Picker</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="5"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</PickerElement>
		<TextElement sr="elements9" ve="3">
			<flags>4</flags>
			<geom>532,825,270,223,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">TTS Pitch Rate</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;TTS Pitch Rate:&lt;/b&gt;</Str>
			<Int sr="arg2" val="14"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="2"/>
		</TextElement>
		<PropertiesElement sr="props">
			<keyTask>21</keyTask>
			<Int sr="arg0" val="2"/>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Int sr="arg3" val="1"/>
			<Str sr="arg4" ve="3">Voice Commands</Str>
			<Str sr="arg5" ve="3">Settings</Str>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
			<ListElementItem sr="item0">
				<label>Advance Settings</label>
				<Action sr="action" ve="7">
					<code>130</code>
					<Str sr="arg0" ve="3">Advance Settings Launcher</Str>
					<Int sr="arg1">
						<var>%priority</var>
					</Int>
					<Int sr="arg10" val="1"/>
					<Str sr="arg2" ve="3"/>
					<Str sr="arg3" ve="3"/>
					<Str sr="arg4" ve="3"/>
					<Int sr="arg5" val="0"/>
					<Int sr="arg6" val="0"/>
					<Str sr="arg7" ve="3"/>
					<Int sr="arg8" val="0"/>
					<Int sr="arg9" val="0"/>
				</Action>
			</ListElementItem>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneVoice Commands">
		<cdate>1724087618674</cdate>
		<edate>1740215797250</edate>
		<heightLand>-1</heightLand>
		<heightPort>2160</heightPort>
		<nme>Voice Commands</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<ListElement sr="elements0">
			<flags>4</flags>
			<geom>0,30,1079,2130,-1,-1,-1,-1</geom>
			<itemclickTask>17</itemclickTask>
			<itemlongclickTask>10</itemlongclickTask>
			<Str sr="arg0" ve="3">Commands_List_Menu</Str>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%Cmd_lst</Str>
			<Int sr="arg3" val="0"/>
			<Scene sr="arg4">
				<Scene sr="val">
					<cdate>1724690280457</cdate>
					<edate>1724690280457</edate>
					<gridSize>0</gridSize>
					<heightLand>-1</heightLand>
					<heightPort>348</heightPort>
					<nme>Builtin Item Layout</nme>
					<widthLand>-1</widthLand>
					<widthPort>1020</widthPort>
					<ImageElement sr="elements0" ve="2">
						<flags>1</flags>
						<geom>573,15,153,137,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Icon</Str>
						<Img sr="arg1" ve="2">
							<nme>hd_aaa_ext_tiles_small</nme>
						</Img>
						<Int sr="arg2" val="255"/>
					</ImageElement>
					<TextElement sr="elements1" ve="3">
						<flags>5</flags>
						<geom>54,18,943,297,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Label</Str>
						<Str sr="arg1" ve="3"/>
						<Int sr="arg2" val="6"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FF000000</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="3"/>
						<Int sr="arg7" val="0"/>
						<Int sr="arg8" val="2"/>
						<RectElement sr="background">
							<flags>4</flags>
							<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
							<Str sr="arg0" ve="3"/>
							<Int sr="arg1" val="0"/>
							<Str sr="arg2" ve="3">#61E9F2EE</Str>
							<Str sr="arg3" ve="3"/>
							<Int sr="arg4" val="1"/>
							<Str sr="arg5" ve="3">#61E9F2EE</Str>
							<Int sr="arg6" val="30"/>
							<Int sr="arg7" val="0"/>
						</RectElement>
					</TextElement>
					<TextElement sr="elements2" ve="3">
						<flags>5</flags>
						<geom>0,17,57,301,-1,-1,-1,-1</geom>
						<Str sr="arg0" ve="3">Index</Str>
						<Str sr="arg1" ve="3">1.</Str>
						<Int sr="arg2" val="6"/>
						<Int sr="arg3" val="100"/>
						<Str sr="arg4" ve="3">#FF000000</Str>
						<Str sr="arg5" ve="3"/>
						<Int sr="arg6" val="0"/>
						<Int sr="arg7" val="1"/>
						<Int sr="arg8" val="0"/>
					</TextElement>
					<PropertiesElement sr="props">
						<Int sr="arg0" val="1"/>
						<Int sr="arg1" val="2"/>
						<Str sr="arg2" ve="3">#00000000</Str>
						<Int sr="arg3" val="0"/>
						<Str sr="arg4" ve="3">Builtin Item Layout</Str>
						<Str sr="arg5" ve="3"/>
						<Img sr="arg6" ve="2"/>
						<Str sr="arg7" ve="3"/>
					</PropertiesElement>
				</Scene>
			</Scene>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="1"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</ListElement>
		<OvalElement sr="elements1">
			<flags>4</flags>
			<geom>802,1880,274,280,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Oval1</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FF0FFFC4</Str>
			<Str sr="arg3" ve="3">#FF0DC48C</Str>
			<Int sr="arg4" val="2"/>
			<Str sr="arg5" ve="3">#FF000000</Str>
		</OvalElement>
		<TextElement sr="elements2" ve="3">
			<clickTask>11</clickTask>
			<flags>4</flags>
			<geom>802,1880,274,280,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Text1</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;Install a command&lt;/b&gt;</Str>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="2"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<TextElement sr="elements3" ve="3">
			<clickTask>89</clickTask>
			<flags>4</flags>
			<geom>347,1980,360,169,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Assistant Preview</Str>
			<Str sr="arg1" ve="3">∆Assistant Preview∆</Str>
			<Int sr="arg2" val="10"/>
			<Int sr="arg3" val="100"/>
			<Str sr="arg4" ve="3">#FF000000</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="0"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#FF2CF6BE</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="1"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="30"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</TextElement>
		<PropertiesElement sr="props">
			<keyTask>2</keyTask>
			<Int sr="arg0" val="2"/>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Int sr="arg3" val="1"/>
			<Str sr="arg4" ve="3">Voice Commands</Str>
			<Str sr="arg5" ve="3">Commands list</Str>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
			<ListElementItem sr="item0">
				<label>Settings</label>
				<Action sr="action" ve="7">
					<code>130</code>
					<Str sr="arg0" ve="3">Settings Launcher</Str>
					<Int sr="arg1">
						<var>%priority</var>
					</Int>
					<Int sr="arg10" val="1"/>
					<Str sr="arg2" ve="3"/>
					<Str sr="arg3" ve="3"/>
					<Str sr="arg4" ve="3"/>
					<Int sr="arg5" val="0"/>
					<Int sr="arg6" val="0"/>
					<Str sr="arg7" ve="3"/>
					<Int sr="arg8" val="0"/>
					<Int sr="arg9" val="0"/>
				</Action>
			</ListElementItem>
			<ListElementItem sr="item1">
				<label>Advance Settings</label>
				<Action sr="action" ve="7">
					<code>130</code>
					<Str sr="arg0" ve="3">Advance Settings Launcher</Str>
					<Int sr="arg1">
						<var>%priority</var>
					</Int>
					<Int sr="arg10" val="1"/>
					<Str sr="arg2" ve="3"/>
					<Str sr="arg3" ve="3"/>
					<Str sr="arg4" ve="3"/>
					<Int sr="arg5" val="0"/>
					<Int sr="arg6" val="0"/>
					<Str sr="arg7" ve="3"/>
					<Int sr="arg8" val="0"/>
					<Int sr="arg9" val="0"/>
				</Action>
			</ListElementItem>
		</PropertiesElement>
	</Scene>
	<Task sr="task10">
		<cdate>1724689280017</cdate>
		<edate>1724689280017</edate>
		<id>10</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp</Str>
			<Str sr="arg1" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%final_temp</Str>
			<Str sr="arg1" ve="3">%temp.Name</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act11" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%input</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>390</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">YesOrNo</Str>
			<Str sr="arg2" ve="3">Uninstall Command</Str>
			<Str sr="arg3" ve="3">Are you want to uninstall '%final_temp' command?</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5">
				<var>0</var>
			</Int>
		</Action>
		<Action sr="act3" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%input</lhs>
					<op>2</op>
					<rhs>yes</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act4" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Cmd_lst(%tap_index)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>369</code>
			<Str sr="arg0" ve="3">%Cmd_DB</Str>
			<Int sr="arg1" val="13"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>369</code>
			<Str sr="arg0" ve="3">%Cmd_lst</Str>
			<Int sr="arg1" val="13"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act9" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Cancelled...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task11">
		<cdate>1724691443888</cdate>
		<edate>1724691443888</edate>
		<id>11</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Oval1</Str>
			<Str sr="arg2" ve="3">#FF00CCD7</Str>
			<Str sr="arg3" ve="3">#FF00CCD7</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>30</code>
			<Int sr="arg0" val="200"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Oval1</Str>
			<Str sr="arg2" ve="3">#FF0FFFC4</Str>
			<Str sr="arg3" ve="3">#FF0FFFC4</Str>
		</Action>
		<Action sr="act3" ve="7">
			<code>30</code>
			<Int sr="arg0">
				<var>100</var>
			</Int>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>377</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%td_button
Button
The label of the button that was clicked&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">Command Installation</Str>
			<Str sr="arg2" ve="3">Install a new command from:</Str>
			<Str sr="arg3" ve="3">Manual</Str>
			<Str sr="arg4" ve="3">VCL</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="120"/>
			<Int sr="arg7" val="0"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%td_button</lhs>
					<op>2</op>
					<rhs>Manual</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act6" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
			<Int sr="arg1" val="5"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act8" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Cmd Installer vcl</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task12">
		<cdate>1724777770272</cdate>
		<edate>1738583906451</edate>
		<id>12</id>
		<nme>Cmd Menu Update</nme>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>false</coll>
			<label>If the command database is empty then there is no need to update the command list (menu)</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%Cmd_DB(#)</lhs>
					<op>7</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%index_for_loop</Str>
			<Str sr="arg1" ve="3">1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<label>Loop Start</label>
			<Str sr="arg0" ve="3">%temp</Str>
			<Str sr="arg1" ve="3">%Cmd_DB(%index_for_loop)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Cmd_lst(%index_for_loop)</Str>
			<Str sr="arg1" ve="3">&lt;b&gt;&lt;h3&gt; Name: %temp[Name] &lt;/h3&gt;&lt;/b&gt;&lt;h4&gt; Author: %temp[Author] &lt;h4&gt; &lt;h5&gt; V: %temp[Version] &lt;/h5&gt;
&lt;h6&gt; Keys: %temp[Keywords] &lt;/h6&gt;
&lt;p&gt; %temp[Description] &lt;/p&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%index_for_loop</Str>
			<Str sr="arg1" ve="3">%index_for_loop+1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">Loop Start</Str>
			<ConditionList sr="if">
				<bool0>Or</bool0>
				<Condition sr="c0" ve="3">
					<lhs>%index_for_loop</lhs>
					<op>6</op>
					<rhs>%Cmd_DB(#)</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%index_for_loop</lhs>
					<op>8</op>
					<rhs>%Cmd_DB(#)</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act6" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task13">
		<cdate>1726331315245</cdate>
		<edate>1735023437988</edate>
		<id>13</id>
		<nme>Sample Flash</nme>
		<pri>6</pri>
		<Action sr="act0" ve="7">
			<code>129</code>
			<on>false</on>
			<Str sr="arg0" ve="3">/* VC_engine is a launcher type command responsible for calling appropriate commands with their appropriate keywords and execute them for the user. This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download source files from my github profile https://github.com/nirmalpaul383 .
My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/ FaceBook Page: https://www.facebook.com/a.New.Way.Technical/ GitHub Page: https://github.com/nirmalpaul383 */


new Function(global("VC_SL"))(); //Importing and evaluating (using the Function constructor (without using the eval() function)) Voice Control Support Library from global variable %VC_SL

const VC_apis = new VCSL(); //For Creation of a new Voice Control Support Library object
let commands = VC_apis.arrayConverter("Cmd_DB"); //Geeting all installed commands into javascript 's array format

let userQueries = VC_apis.getVoice(); //For getting user voice command into userQueries variable (e.g. user: "  Note this data is to be noted   ").

userQueries = userQueries.trim(); //For removing whitespace from the userQueries and store it back to the userQueries (e.g. "Note this data is to be noted").

let tempQueries = userQueries.toLowerCase(); //For converting the userQueries into lowercase and store it to the tempQueries (in this example "note this data is to be noted")

let cmdCodes = ``; //Will be used for storing codes from command (if any matching keywoard found)
let matchedKey = ``; //Will be used for storing the matched keyword (if any matching keywoard found)

//For accessing each command element from the commands array
for (eachCommand of commands) {
    let eachCmdKeys = eachCommand.Keywords; //For acessing keywords string property from each command (e.g. " nOte , notEpad, Write,writepaD")
    eachCmdKeys = eachCmdKeys.split(","); //For converting String to Array with the "," spliter and store it back to the eachCmdKeys (e.g. [" nOte "," notEpad"," Write","writepaD"])

    let breakOuterLoop = false; //If any maching is found then this varibale will be used for breaking the outer loop

    for (index in eachCmdKeys) {
        eachCmdKeys[index] = eachCmdKeys[index].trim(); //For removing whitespace from each keys and store it back to its previous index position in the eachCmdKeys array (e.g. "nOte" , "notEpad" , "Write" , "writepaD")
        eachCmdKeys[index] = eachCmdKeys[index].toLowerCase(); //For converting each keys into lowercase and store it back to its previous index position in the eachCmdKeys array (e.g. "note" , "notepad" , "write" , "writepad")

        let isKeyWordMatch = tempQueries.startsWith(eachCmdKeys[index]) //For checking if the keyword of the command is in the user queries or not

        if (isKeyWordMatch) {
            cmdCodes = eachCommand.Codes; //For acessing codes property from each command (e.g. "console.log("hello world")")
            matchedKey = eachCmdKeys[index]; //For storing the matched key for future reference
            breakOuterLoop = true; //Will be used for breaking the outer loop
            break; //Break this inner loop
        }
    }
    if (breakOuterLoop === true) {
        break; //Break this outer loop
    }


}

//If matched Key value was set thats mean matched key was found. Only then the appropiate command 's codes will be executed
if (matchedKey) {
    globalThis.VC_OInfos = { "userQueries": userQueries, "matchedKey": matchedKey }; //For attaching Other Information to the globalThis object 's as property

    //Try to execute the appropriate commands code , if it is possible then it will try to execute it otherwise say the the error message
    try {
        new Function(cmdCodes)(); //For evaluating codes from matching command
    }
    catch (error){
        VC_apis.say(`There was an error while running the codes from the command. Error: ${error.message}`); //For saying the error message
        flash(`${error.message}`); //For flashing the error message
    }
}

//If matched Key value was NOT SET thats mean matched key was not found.
else {
 VC_apis.say("Voice Command does not have the appropriate command to do that")
};</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3">
				<var>500</var>
			</Int>
		</Action>
		<Action sr="act1" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">%caller()</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task14">
		<cdate>1735500585420</cdate>
		<edate>1735500585420</edate>
		<id>14</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">Default</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Visual Feedback Switch</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Pitch Number Picker</Str>
			<Int sr="arg2" val="5"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Speed Number Picker</Str>
			<Int sr="arg2" val="5"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Option Per List Spinner</Str>
			<Int sr="arg2" val="5"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VC_Setting_Properties</Str>
			<Str sr="arg1" ve="3">{
"pitch_property" : 5,
"speed_property" : 5,
"max_options_property" : 5 ,
"visual_feedback" : "on",
"voice_language": "undefined"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Voice Commands 's TTS configurations are reset...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task15">
		<cdate>1735330183552</cdate>
		<edate>1735330183552</edate>
		<id>15</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">Default</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
	</Task>
	<Task sr="task16">
		<cdate>1725459537839</cdate>
		<edate>1725459537839</edate>
		<id>16</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Cancelled...</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task17">
		<cdate>1725460888670</cdate>
		<edate>1725460888670</edate>
		<id>17</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp</Str>
			<Str sr="arg1" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_name</Str>
			<Str sr="arg1" ve="3">%temp.Name</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_author</Str>
			<Str sr="arg1" ve="3">%temp.Author</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_version</Str>
			<Str sr="arg1" ve="3">%temp.Version</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_keywords</Str>
			<Str sr="arg1" ve="3">%temp.Keywords</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_description</Str>
			<Str sr="arg1" ve="3">%temp.Description</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_codes</Str>
			<Str sr="arg1" ve="3">%temp.Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">CMD Edit</Str>
			<Int sr="arg1" val="5"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">CMD Edit</Str>
			<Str sr="arg1" ve="3">Command Infos</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">&lt;b&gt;Name:&lt;/b&gt; %temp_name
&lt;b&gt;Version:&lt;/b&gt; %temp_version
&lt;b&gt;Author:&lt;/b&gt; %temp_author</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">CMD Edit</Str>
			<Str sr="arg1" ve="3">Keys</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%temp_keywords</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
	</Task>
	<Task sr="task18">
		<cdate>1725459388221</cdate>
		<edate>1725459388221</edate>
		<id>18</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">CMD Edit</Str>
			<Str sr="arg1" ve="3">Keys</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%temp_keywords</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%temp_keywords</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Cmd_lst(%tap_index)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Cmd_DB(%tap_index)</Str>
			<Str sr="arg1" ve="3">&lt;vcl&gt;
&lt;Name&gt;%temp_name&lt;/Name&gt;
&lt;Version&gt;%temp_version&lt;/Version&gt;
&lt;Author&gt;%temp_author&lt;/Author&gt;
&lt;Description&gt;%temp_description&lt;/Description&gt;
&lt;Keywords&gt;%temp_keywords&lt;/Keywords&gt;
&lt;Codes&gt;&lt;![CDATA[

%temp_codes

]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Cmd Menu Update</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">CMD Edit</Str>
		</Action>
		<Action sr="act7" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Saved...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act9" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Keywords cannot be empty...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task19">
		<cdate>1725459537839</cdate>
		<edate>1725459537839</edate>
		<id>19</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">CMD Edit</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Cancelled...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task2">
		<cdate>1724088242022</cdate>
		<edate>1724088242022</edate>
		<id>2</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
		</Action>
	</Task>
	<Task sr="task20">
		<cdate>1726331637343</cdate>
		<edate>1738188029591</edate>
		<id>20</id>
		<nme>Settings Launcher</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Int sr="arg1" val="6"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>354</code>
			<Str sr="arg0" ve="3">%enabled_profiles</Str>
			<Str sr="arg1" ve="3">%PENABLED</Str>
			<Str sr="arg2" ve="3">,</Str>
		</Action>
		<Action sr="act10" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Phone Ringing Listener Switch</Str>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act12" ve="7">
			<code>37</code>
			<coll>false</coll>
			<label>For checking if the missed call listener service is running or not.
If it is running then the missed call listener switch is set to on and if not then the missed call listener switch is set to off.</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Missed Call Listener)</lhs>
					<op>9</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act13" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Missed Call Listener Switch</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Missed Call Listener)</lhs>
					<op>8</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act15" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Missed Call Listener Switch</Str>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act17" ve="7">
			<code>37</code>
			<coll>false</coll>
			<label>For checking if the Force VC Assistant Launcher service is running or not.
If it is running then the Force VC Assistant Launcher switch is set to on and if not then the Force VC Assistant Launcher switch is set to off.</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Force VC Assistant Launcher)</lhs>
					<op>9</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act18" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Force VC Assistant Launcher Switch</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Force VC Assistant Launcher)</lhs>
					<op>8</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<coll>true</coll>
			<label>For checking if the assistant listener service is running or not.
If it is running then the assistant listener switch is set to on and if not then the assistant listener switch is set to off.</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Assistant Listener)</lhs>
					<op>9</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act20" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Force VC Assistant Launcher Switch</Str>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act22" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%crnt_tts_pitch {SPLIT} %crnt_tts_speed {SPLIT} %crnt_tts_max_optns {SPLIT} %crnt_visual_fb {SPLIT} %crnt_tts_lang</Str>
			<Str sr="arg2" ve="3"> {SPLIT} </Str>
			<Str sr="arg3" ve="3">%VC_Setting_Properties[pitch_property] {SPLIT} %VC_Setting_Properties[speed_property] {SPLIT} %VC_Setting_Properties[max_options_property] {SPLIT} %VC_Setting_Properties[visual_feedback] {SPLIT} %VC_Setting_Properties[voice_language]</Str>
			<Str sr="arg4" ve="3"> {SPLIT} </Str>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Pitch Number Picker</Str>
			<Int sr="arg2">
				<var>%crnt_tts_pitch</var>
			</Int>
		</Action>
		<Action sr="act24" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Speed Number Picker</Str>
			<Int sr="arg2">
				<var>%crnt_tts_speed</var>
			</Int>
		</Action>
		<Action sr="act25" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Option Per List Spinner</Str>
			<Int sr="arg2">
				<var>%crnt_tts_max_optns</var>
			</Int>
		</Action>
		<Action sr="act26" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Visual Feedback Switch</Str>
			<Int sr="arg2">
				<var>0</var>
			</Int>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%crnt_visual_fb</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act27" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Visual Feedback Switch</Str>
			<Int sr="arg2">
				<var>1</var>
			</Int>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%crnt_visual_fb</lhs>
					<op>2</op>
					<rhs>on</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act28" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">Default</Str>
			<Str sr="arg4" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%crnt_tts_lang</lhs>
					<op>2</op>
					<rhs>undefined</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act29" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%crnt_tts_lang</Str>
			<Str sr="arg4" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%crnt_tts_lang</lhs>
					<op>3</op>
					<rhs>undefined</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Assistant Listener Switch</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act30" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">Default</Str>
			<Str sr="arg4" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%crnt_tts_lang</lhs>
					<op>2</op>
					<rhs>undefined</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act4" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Assistant Listener)</lhs>
					<op>8</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act5" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Assistant Listener Switch</Str>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>37</code>
			<coll>true</coll>
			<label>For checking if the phone ringing listener service is running or not.
If it is running then the phone ringing listener switch is set to on and if not then the phone ringing listener switch is set to off.</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Phone Ringing Listener)</lhs>
					<op>9</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act8" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Phone Ringing Listener Switch</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%enabled_profiles(#?Phone Ringing Listener)</lhs>
					<op>8</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
	</Task>
	<Task sr="task21">
		<cdate>1726765629287</cdate>
		<edate>1733952108946</edate>
		<id>21</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Settings</Str>
		</Action>
	</Task>
	<Task sr="task22">
		<cdate>1732285026977</cdate>
		<edate>1732285026977</edate>
		<id>22</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">Assistant Listener</Str>
			<Int sr="arg1" val="2"/>
		</Action>
	</Task>
	<Task sr="task23">
		<cdate>1732472446807</cdate>
		<edate>1732472446807</edate>
		<id>23</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_for_assistant_cmd</Str>
			<Str sr="arg1" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Assistant_listner_cmd</Str>
			<Str sr="arg1" ve="3">%temp_for_assistant_cmd</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt; &lt;font color=red&gt; %temp_for_assistant_cmd[Name] &lt;/font&gt; &lt;/b&gt;command , Version: &lt;font color=green&gt; %temp_for_assistant_cmd[Version] &lt;/font&gt;</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3">Assistant listener command assigned to:</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task24">
		<cdate>1732285026977</cdate>
		<edate>1732285026977</edate>
		<id>24</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">Missed Call Listener</Str>
			<Int sr="arg1" val="2"/>
		</Action>
	</Task>
	<Task sr="task25">
		<cdate>1732285026977</cdate>
		<edate>1732285026977</edate>
		<id>25</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">Phone Ringing Listener</Str>
			<Int sr="arg1" val="2"/>
		</Action>
	</Task>
	<Task sr="task26">
		<cdate>1732472446807</cdate>
		<edate>1732472446807</edate>
		<id>26</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_for_phone_ringing</Str>
			<Str sr="arg1" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Phone_ringing_listner_cmd</Str>
			<Str sr="arg1" ve="3">%temp_for_phone_ringing</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt; &lt;font color=red&gt; %temp_for_phone_ringing[Name] &lt;/font&gt; &lt;/b&gt;command , Version: &lt;font color=green&gt; %temp_for_phone_ringing[Version] &lt;/font&gt;</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3">Phone ringing listener command assigned to:</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task27">
		<cdate>1732472446807</cdate>
		<edate>1732472446807</edate>
		<id>27</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp_for_missed_call</Str>
			<Str sr="arg1" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Missed_call_listner_cmd</Str>
			<Str sr="arg1" ve="3">%temp_for_missed_call</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt; &lt;font color=red&gt; %temp_for_missed_call[Name] &lt;/font&gt; &lt;/b&gt;command , Version: &lt;font color=green&gt; %temp_for_missed_call[Version] &lt;/font&gt;</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3">Missed call listener command assigned to:</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task28">
		<cdate>1733644031675</cdate>
		<edate>1733644031675</edate>
		<id>28</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">GetContactsDB</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task29">
		<cdate>1733644243077</cdate>
		<edate>1740217370829</edate>
		<id>29</id>
		<nme>Get Permissions</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Voice Commands needs some permission for working correctly...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>319</code>
			<Str sr="arg0" ve="3">android.permission.DIGITAL_ASSISTANT

android.permission.BIND_ACCESSIBILITY_SERVICE

android.permission.READ_CONTACTS

android.permission.RECORD_AUDIO

android.permission.READ_PHONE_NUMBERS

android.permission.PACKAGE_USAGE_STATS

android.permission.BLUETOOTH

android.permission.BLUETOOTH_ADMIN</Str>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>319</code>
			<on>false</on>
			<Str sr="arg0" ve="3">android.permission.BLUETOOTH</Str>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>319</code>
			<on>false</on>
			<Str sr="arg0" ve="3">android.permission.DIGITAL_ASSISTANT
android.permission.READ_EXTERNAL_STORAGE
android.permission.WRITE_EXTERNAL_STORAGE
android.permission.READ_CONTACTS
android.permission.RECORD_AUDIO
android.permission.READ_PHONE_NUMBERS
android.permission.PACKAGE_USAGE_STATS
android.permission.ACCESS_NOTIFICATION_POLICY</Str>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>319</code>
			<on>false</on>
			<Str sr="arg0" ve="3">android.permission.CALL_PHONE</Str>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>133</code>
			<on>false</on>
			<Int sr="arg0" val="27"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
		</Action>
	</Task>
	<Task sr="task3">
		<cdate>1723531207111</cdate>
		<edate>1738324391885</edate>
		<id>3</id>
		<nme>GetContactsDB</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Getting contacts list please wait...</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>549</code>
			<label>for resetting Contact_DB after each refresh action</label>
			<Str sr="arg0" ve="3">%Contacts_DB</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>391</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%pd_type
Type
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Int sr="arg7" val="66"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="100"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>369</code>
			<label>for removing duplicate numbers</label>
			<Str sr="arg0" ve="3">%contacts_num</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>369</code>
			<label>for removing empty elements of array</label>
			<Str sr="arg0" ve="3">%contacts_num</Str>
			<Int sr="arg1" val="13"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%index_for_loop</Str>
			<Str sr="arg1" ve="3">0</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>547</code>
			<label>loop start</label>
			<Str sr="arg0" ve="3">%index_for_loop</Str>
			<Str sr="arg1" ve="3">%index_for_loop+1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="2"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>391</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%pd_type
Type
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3">Getting contacts details...</Str>
			<Str sr="arg3" ve="3">Steps 2 out of 2: Saving contacts data...</Str>
			<Int sr="arg4" val="1"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Int sr="arg7" val="66"/>
			<Int sr="arg8">
				<var>%index_for_loop</var>
			</Int>
			<Int sr="arg9">
				<var>%contacts_num(#)</var>
			</Int>
		</Action>
		<Action sr="act16" ve="7">
			<code>346</code>
			<Int sr="arg0" val="4"/>
			<Str sr="arg1" ve="3">%contacts_num(%index_for_loop)</Str>
			<Str sr="arg2" ve="3">%contacts_name</Str>
		</Action>
		<Action sr="act17" ve="7">
			<code>596</code>
			<label>for ignoring Lower case and upper case difference</label>
			<Str sr="arg0" ve="3">%contacts_name</Str>
			<Int sr="arg1" val="28"/>
			<Str sr="arg2" ve="3">%contacts_name</Str>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act18" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Contacts_DB</Str>
			<Str sr="arg1" ve="3">"%contacts_name" : "%contacts_num(%index_for_loop)",
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">loop start</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%index_for_loop</lhs>
					<op>6</op>
					<rhs>%contacts_num(#)</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>667</code>
			<label>for getting all contact numbers and temporarily saving those for further processing</label>
			<Int sr="arg0" val="2"/>
			<Str sr="arg1" ve="3">content://com.android.contacts/data</Str>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3">data1</Str>
			<Str sr="arg4" ve="3">data.mimetype = 'vnd.android.cursor.item/phone_v2'</Str>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">%temp_contacts_num</Str>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>357</code>
			<Str sr="arg0" ve="3">%contacts_name</Str>
		</Action>
		<Action sr="act21" ve="7">
			<code>357</code>
			<Str sr="arg0" ve="3">%contacts_num</Str>
		</Action>
		<Action sr="act22" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%index_for_loop</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>547</code>
			<label>"{" and "}" used for structuring the JSON.
"0" : "0" used for the last element for mainly 2 reasons-&gt; 1. this is the by-default value (if contacts cannot be gotten), 2. it eliminates / use last "," which was kept by the variable set action previously.</label>
			<Str sr="arg0" ve="3">%Contacts_DB</Str>
			<Str sr="arg1" ve="3">{%Contacts_DB"0" : "0"}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act24" ve="7">
			<code>391</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%pd_type
Type
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Int sr="arg7" val="66"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="100"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>39</code>
			<coll>false</coll>
			<label>for removing additional notation from the each individual contacts number (e.g. '+91', '-', or space)</label>
			<Str sr="arg0" ve="3">%each_number</Str>
			<Str sr="arg1" ve="3">%temp_contacts_num()</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>391</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%pd_type
Type
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3">Getting contacts details</Str>
			<Str sr="arg3" ve="3">Steps 1 out of 2: Getting phones numbers...</Str>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">android.resource://net.dinglisch.android.taskerm/drawable/mw_action_code,</Str>
			<Str sr="arg6" ve="3">#FF00FF0E</Str>
			<Int sr="arg7" val="66"/>
			<Int sr="arg8">
				<var>%temp_contacts_num</var>
			</Int>
			<Int sr="arg9">
				<var>%temp_contacts_num</var>
			</Int>
		</Action>
		<Action sr="act5" ve="7">
			<code>598</code>
			<se>false</se>
			<Str sr="arg0" ve="3">%each_number</Str>
			<Str sr="arg1" ve="3">\+91</Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>598</code>
			<se>false</se>
			<Str sr="arg0" ve="3">%each_number</Str>
			<Str sr="arg1" ve="3">-</Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>598</code>
			<se>false</se>
			<Str sr="arg0" ve="3">%each_number</Str>
			<Str sr="arg1" ve="3"> </Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>355</code>
			<Str sr="arg0" ve="3">%contacts_num</Str>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%each_number</Str>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>40</code>
		</Action>
	</Task>
	<Task sr="task30">
		<cdate>1733644326316</cdate>
		<edate>1733644326316</edate>
		<id>30</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Get Permissions</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task31">
		<cdate>1733644596333</cdate>
		<edate>1733644596333</edate>
		<id>31</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>390</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">YesOrNo</Str>
			<Str sr="arg2" ve="3">Delete Contacts DB</Str>
			<Str sr="arg3" ve="3">Are you sure? This action will delete Contacts DB</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="30"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%input</lhs>
					<op>2</op>
					<rhs>yes</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Contacts_DB</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Contacts DB cleared...</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>43</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%input</lhs>
					<op>2</op>
					<rhs>no</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act5" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Contacts DB will not be cleared...</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task35">
		<cdate>1735906347649</cdate>
		<edate>1740125682755</edate>
		<id>35</id>
		<nme>Custom Toast Alert</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%par1</Str>
			<Str sr="arg1" ve="3"> </Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>194</code>
			<Str sr="arg0" ve="3">Custom Toast</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">%visual_fb_status</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">Custom Toast</Str>
			<Int sr="arg1" val="3"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%visual_fb_status</lhs>
					<op>3</op>
					<rhs>visible</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Custom Toast</Str>
			<Str sr="arg1" ve="3">Text For Custom Toast</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%par1</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="2"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Custom Toast</Str>
		</Action>
	</Task>
	<Task sr="task36">
		<cdate>1732285026977</cdate>
		<edate>1732285026977</edate>
		<id>36</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">Force VC Assistant Launcher</Str>
			<Int sr="arg1" val="2"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>319</code>
			<Str sr="arg0" ve="3">android.permission.BIND_ACCESSIBILITY_SERVICE</Str>
			<Str sr="arg1" ve="3"/>
		</Action>
	</Task>
	<Task sr="task37">
		<cdate>1733644596333</cdate>
		<edate>1733644596333</edate>
		<id>37</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>390</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">YesOrNo</Str>
			<Str sr="arg2" ve="3">Reset Voice Commands</Str>
			<Str sr="arg3" ve="3">This will reset everything in the Voice Commands (including all commands, settings, .vcl installer, Voice Commands Support Library (VCSL), any saved data(if any))

This action can not be un done.
Do you want to reset Voice Commands?</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="120"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%input</lhs>
					<op>2</op>
					<rhs>yes</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">&lt;h1&gt;Resetting...&lt;/h1&gt;</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Settings</Str>
		</Action>
		<Action sr="act4" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">All Default Values</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task38">
		<cdate>1735330852338</cdate>
		<edate>1735330852338</edate>
		<id>38</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">TTS Properties Getter</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task39">
		<cdate>1734122224206</cdate>
		<edate>1738187158184</edate>
		<id>39</id>
		<nme>Template For Get Assistant Info</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>421</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%ai_app_name
App Name
Name of the App&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%ai_app_class
Class
Class name of the currently opened screen.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%ai_extras
Extras
JSON structure representing all extra info about the screen at the moment of the request&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%ai_app_package
Package
Package name of the currently opened app. Get More info on it with the App Info action.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%ai_texts
Texts
JSON structure representing all texts that the assistant can see at the moment of the request&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%ai_url
URL
Possible URL associated with the current screen&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
		</Action>
	</Task>
	<Task sr="task4">
		<cdate>1723566246703</cdate>
		<edate>1740219920529</edate>
		<id>4</id>
		<nme>Launcher</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<se>false</se>
			<Str sr="arg0" ve="3">Voice Commands</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%VC_SL</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Get Permissions</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">All Default Values</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>161</code>
			<Str sr="arg0" ve="3">VC Assistant</Str>
			<Str sr="arg1" ve="3"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act6" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Int sr="arg1" val="6"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task40">
		<cdate>1733869934443</cdate>
		<edate>1740045845628</edate>
		<id>40</id>
		<nme>About</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Thanks for trying this application ☺️</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>30</code>
			<Int sr="arg0" val="760"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>104</code>
			<Str sr="arg0" ve="3">https://github.com/nirmalpaul383</Str>
			<App sr="arg1"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">GitHub page</Str>
		</Action>
		<Action sr="act3" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">&lt;b&gt;Voice Commands by &lt;font color="blue"&gt;N Paul &lt;/font&gt;&lt;/b&gt;
&lt;br&gt;</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task41">
		<cdate>1733870053036</cdate>
		<edate>1733870053036</edate>
		<id>41</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">About</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task43">
		<cdate>1733950409827</cdate>
		<edate>1735930715423</edate>
		<id>43</id>
		<nme>TTS Properties Getter</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Pitch Number Picker</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%tts_pitch</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Speed Number Picker</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%tts_speed</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Option Per List Spinner</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%max_options</Str>
		</Action>
		<Action sr="act3" ve="7">
			<code>597</code>
			<Str sr="arg0" ve="3">%max_options</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="2"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">%max_options</Str>
		</Action>
		<Action sr="act4" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">Visual Feedback Switch</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%visual_fb_status</Str>
		</Action>
		<Action sr="act5" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%tts_lang</Str>
		</Action>
		<Action sr="act6" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%tts_lang</Str>
			<Str sr="arg1" ve="3">undefined</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<bool0>Or</bool0>
				<Condition sr="c0" ve="3">
					<lhs>%tts_lang</lhs>
					<op>2</op>
					<rhs>Default</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%tts_lang</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act7" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VC_Setting_Properties</Str>
			<Str sr="arg1" ve="3">{
"pitch_property" : %tts_pitch,
"speed_property" : %tts_speed,
"max_options_property" : %max_options,
"visual_feedback" : "%visual_fb_status",
"voice_language": "%tts_lang"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">%VC_Setting_Properties</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task44">
		<cdate>1735331544041</cdate>
		<edate>1735331544041</edate>
		<id>44</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">try{
/* TTS_Preview.js is used for previewing Voice Command 's Text-to-Speech service and the option api from the Voice Comand 's setting page. This project is originally made by me (N Paul) (https://github.com/nirmalpaul383).
   You can download source files from my github profile https://github.com/nirmalpaul383 . My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/ FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
   GitHub Page: https://github.com/nirmalpaul383 */


new Function(global("VC_SL"))(); //Importing and evaluating (using the Function constructor (without using the eval() function)) Voice Control Support Library from global variable %VC_SL

const VC_apis = new VCSL(); //For Creation of a new Voice Control Support Library object

let sampleOptions = `This is sample for previewing Voice Command 's Text-to-Speech service and the option api capability.
Select a random option by saying the corresponding option number`

const options = ["Hot/Cold","Day/Night","On/Off","Big/Small","Fast/Slow","Left/Right","Up/Down","Yes/No","Red/Green/Blue","Small/Medium/Large","Happy/Sad", "Old/New",
    "High/Low","Easy/Hard","Light/Dark","Simple/Complex","Quiet/Loud","Clean/Dirty","Full/Empty","Open/Closed","True/False","Morning/Afternoon","Summer/Winter","Digital/Analog",
    "Automatic/Manual"];

VC_apis.say(sampleOptions);
let selectedOptn = VC_apis.options(...options);

VC_apis.say(`You selected ${selectedOptn}`)
}
catch(e)
{
flash(e.message)}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3">
				<var>500</var>
			</Int>
		</Action>
	</Task>
	<Task sr="task45">
		<cdate>1735763740278</cdate>
		<edate>1735931373576</edate>
		<id>45</id>
		<nme>Advance Settings Launcher</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Int sr="arg1" val="5"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%VC_Additional_Settings.custom_vcsl</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Switch</Str>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act13" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Codes</Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Switch</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Codes</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%VCL_Installer</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act17" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Stop Key</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%VC_Additional_Settings.stop_key</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Switch</Str>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act5" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Codes</Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>50</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Switch</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Codes</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%VC_SL</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act9" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%VC_Additional_Settings.custom_vcl_installer</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
	</Task>
	<Task sr="task46">
		<cdate>1735764720073</cdate>
		<edate>1735764720073</edate>
		<id>46</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
		</Action>
	</Task>
	<Task sr="task48">
		<cdate>1735906400030</cdate>
		<edate>1735906400030</edate>
		<id>48</id>
		<pri>106</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Custom Toast</Str>
		</Action>
	</Task>
	<Task sr="task49">
		<cdate>1734700162093</cdate>
		<edate>1734700162093</edate>
		<id>49</id>
		<pri>106</pri>
		<Action sr="act0" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Alert</Str>
			<Str sr="arg1" ve="3">OK</Str>
			<Str sr="arg2" ve="3">#FF82A8DE</Str>
			<Str sr="arg3" ve="3">#FF82A8DE</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>30</code>
			<Int sr="arg0" val="100"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Alert</Str>
			<Str sr="arg1" ve="3">OK</Str>
			<Str sr="arg2" ve="3">#FFFFFFFF</Str>
			<Str sr="arg3" ve="3">#FFFFFFFF</Str>
		</Action>
		<Action sr="act3" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Alert</Str>
		</Action>
	</Task>
	<Task sr="task50">
		<cdate>1725036578973</cdate>
		<edate>1725036578973</edate>
		<id>50</id>
		<pri>106</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Installation_agreed</Str>
			<Str sr="arg1" ve="3">YES</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">CMD installation screen</Str>
		</Action>
	</Task>
	<Task sr="task51">
		<cdate>1725037131300</cdate>
		<edate>1725037131300</edate>
		<id>51</id>
		<pri>106</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Installation_agreed</Str>
			<Str sr="arg1" ve="3">NO</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">CMD installation screen</Str>
		</Action>
	</Task>
	<Task sr="task52">
		<cdate>1724777572144</cdate>
		<edate>1740219649920</edate>
		<id>52</id>
		<nme>Cmd Installer vcl</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>390</code>
			<on>false</on>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">FileSystemPicker</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="30"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>390</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">File</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="30"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>417</code>
			<Str sr="arg0" ve="3">%input</Str>
			<Str sr="arg1" ve="3">%temp</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">//Importing and evaluating (using the Function constructor (without using the eval() function))
//Voice Control Support Library from global variable %VC_SL
new Function(global("VC_SL"))();


//Importing and evaluating (using the Function constructor (without using the eval() function))
//vcl installer from global variable %VCL_Installer
new Function(global("VCL_Installer"))();</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3">
				<var>500</var>
			</Int>
		</Action>
	</Task>
	<Task sr="task53">
		<cdate>1735764988052</cdate>
		<edate>1735764988052</edate>
		<id>53</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Rectangle For Save Button</Str>
			<Str sr="arg2" ve="3">#FF0083FF</Str>
			<Str sr="arg3" ve="3">#FF0083FF</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Switch</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%custom_vcsl_switch_status</Str>
		</Action>
		<Action sr="act10" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act11" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%custom_vcl_installer_switch_status</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act12" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Values VCL Installer</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act14" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Codes</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cstm_vcl_installer_codes</Str>
		</Action>
		<Action sr="act15" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VCL_Installer</Str>
			<Str sr="arg1" ve="3">%cstm_vcl_installer_codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">vcl installer changed...</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3">Bottom</Str>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act18" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VC_Additional_Settings</Str>
			<Str sr="arg1" ve="3">{
"custom_vcsl" : "%custom_vcsl_switch_status",
"custom_vcl_installer" : "%custom_vcl_installer_switch_status",
"stop_key" : "%stop_key_value"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Switch</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%custom_vcl_installer_switch_status</Str>
		</Action>
		<Action sr="act3" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Stop Key</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%stop_key_value</Str>
		</Action>
		<Action sr="act4" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%custom_vcsl_switch_status</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act5" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Value VC_SL</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Codes</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cstm_vc_sl_codes</Str>
		</Action>
		<Action sr="act8" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VC_SL</Str>
			<Str sr="arg1" ve="3">%cstm_vc_sl_codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">VC_SL changed...</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3">Top</Str>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task54">
		<cdate>1734092290232</cdate>
		<edate>1740216019604</edate>
		<id>54</id>
		<nme>Default Value VC_SL</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VC_SL</Str>
			<Str sr="arg1" ve="3">// Voice_Commands_support_library (VCSL) is the core component of the Voice Commands system it provides some
// custom interface related functions which helps to simplify the command programming. This
// project is originally made by me (N Paul) (https://github.com/nirmalpaul383).
// You can download source files from my github profile https://github.com/nirmalpaul383 . 
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383

//Class defination for Voice Conmmand Support Library
class VCSL {

    setting = JSON.parse(global('VC_Setting_Properties')); // For getting settings value from global
    // variable "VC_Setting_Properties" and set them as JavaScript object

    additional_settings = JSON.parse(global('VC_Additional_Settings')); // For getting additional
    // settings value from global variable "VC_Additional_Settings" and set them as JavaScript object


    pitch_value = this.setting.pitch_property;  //For getting TTS pitch setting value
    speed_value = this.setting.speed_property;  //For getting TTS speed setting value
    max_options_value = this.setting.max_options_property;  //For getting maximum option setting value
    visual_feedback = this.setting.visual_feedback; //For getting the visual feedback status (either 'on' or 'off')

    // For getting TTS language value. (We have used optional chaining ('?.') for getting voice language property
    // (if voice language property is missing optional chaining ('?.') will return undefined insted of throwing an error))
    voice_language = this.setting?.voice_language;

    stop_key = this.additional_settings.stop_key; //For getting stop key value. This key will be used to
    // stop the options funtion immediately.


    //For storing basic information about this VC_SL
    info = {
        VCSL_Version: "v1.0.0",
        VCSL_Author: "nirmalpaul383 (N Paul)",
        VCSL_Author_Github: "https://github.com/nirmalpaul383"
    }


    //For visually output message
    customToast(toastMsg) {

        //For showing the Custom Toast scene
        showScene("Custom Toast", "Dialog", 0, 0, false, false);

        //For writing the toastMsg to the text element of Custom Toast scene
        elemText("Custom Toast", "Text For Custom Toast", "repl", toastMsg)

        //For waiting for 2 second
        wait(2000);

        //For destroying the Custom Toast scene
        destroyScene("Custom Toast");

    }

    // performTaskWait() allows to run a Tasker task and wait for its completion. Unlike native
    // performTask(), which executes a Tasker task from JavaScript without waiting, performTaskWait()
    // ensures the task is finished before proceeding.
    performTaskWait(taskName, checkingInterval = 500, maxWait = 30000) {

        // Maximum wait time in milliseconds. If this timeout is exceeded, the function will
        // stop waiting and continue executing the next code (except for 0 timeout). There
        // are two types of values for max_timeout: (a) 0: Waits indefinitely until the task
        // is completed. (b) Non-zero value: Waits for a maximum of the specified time (in ms).
        let max_timeout = maxWait;


        // In which interval should the check to be done to see if the task has finished or not.
        // Increasing the interval period reduces system resource usage, while decreasing the
        // interval period increases system resource usage.
        let checking_interval = checkingInterval;

        let total_elapsed_time = 0; //Will be used to store total elapsed Time for Non-zero max_timeout.

        //Run the custom Tasker 's task
        performTask(taskName, 150, "", "", "", false, false, "", true);

        //Initializing the running status of the task
        let runningStatus = taskRunning(taskName)


        //max_timeout: 0 will be used for Waiting indefinitely until the task is completed.
        if (max_timeout === 0) {

            while (runningStatus === true) {

                //Wait for the interval preiod before checking again
                wait(checking_interval);

                //For checking whether the task is currently running or not
                runningStatus = taskRunning(taskName)
            }

        }
        //max_timeout: Non-Zero value (e.g. 500 ms) will be used for Waiting for a maximum of
        // the specified time frame.
        else if (max_timeout &gt; 0) {

            //The loop will continue as long as the "total_elapsed_time" is less than "max_timeout",
            // and the task is still running.
            while ((total_elapsed_time &lt; max_timeout) &amp;&amp; (runningStatus === true)) {

                //Wait for the interval preiod before checking again
                wait(checking_interval);

                //Set the total_elapsed_time value
                total_elapsed_time = total_elapsed_time + checking_interval;

                //For checking whether the task is currently running or not
                runningStatus = taskRunning(taskName)
            }

        };

    }

    //For saying output
    say(text, engine = undefined, voice = undefined) {

        let pitch = this.pitch_value;
        let speed = this.speed_value;
        let vf_status = this.visual_feedback;
        let language = this.voice_language;

        if (vf_status === 'on') {

            this.customToast(`&lt;b&gt;Voice Commands:&lt;/b&gt; ${text}`)
            //For visually output the text on our custom toast msg
        }

        say(text, engine, language, 'media', pitch, speed);

    }

    //For getting voice input and return matched text
    getVoice() {

        let vf_status = this.visual_feedback;

        //For clearing the global variable: %Result_Get_Voice
        setGlobal("Result_Get_Voice", "")

        //For calling our 'Get Voice Custom' task and wait for it to be completed.
        this.performTaskWait("Get Voice Custom", 500, 0);

        //For getting the value from global variable: %Result_Get_Voice
        let Result_Get_Voice = global("Result_Get_Voice");

        //If Result_Get_Voice is a empty string that means GetVoice function does not store any value to it
        if (Result_Get_Voice === "") {

            this.say('Error while getting voice please try again'); //For saying custom error message

            if (vf_status === 'on') {

                this.customToast(`Error while getting voice`)
                //For visually output the error to our custom toast msg
            }

            throw new Error("Error while getting voice"); //Throw a new error and stop any further execution

        }
        else {

            if (vf_status === 'on') {

                //For visually output the user inputted voice on our custom toast msg
                this.customToast(`&lt;b&gt;User:&lt;/b&gt; ${Result_Get_Voice}`)

            }

            //For clearing the global variable: %Result_Get_Voice
            setGlobal("Result_Get_Voice", "")

            //For returning the matching texts
            return Result_Get_Voice;

        }


    }


    //For providing Voice Commands 's options interface
    options(...alternatives) {

        let max_alts_in_each_lst = this.max_options_value;

        if (alternatives.length &gt; 0) {

            this.say(`There are ${alternatives.length} options`);

            //If the max_alts_in_each_lst variable is not set, it will be set to 5 as its default value
            if (typeof (max_alts_in_each_lst) != 'number') {
                max_alts_in_each_lst = 5;
            }

            let temp = ``; //To be used for tempory storing current set / list of options menu     
            let opening_frame_index = 0; //To be used for selecting part of array from the main alternatives
            let closing_frame_index = 0; //To be used for selecting part of array from the main alternatives
            let part_of_alternatives = [] //To be used for storing part of array from the main alternatives

            let selectedAlternative = '0' //To be used for storing selected alternative / option 's number.

            //As long as the closing_frame_index is less than the alternatives.length , this loop continues
            while (closing_frame_index &lt; alternatives.length) {

                // Set the maximum avalible closing frame index with respect to max_alts_in_each_lst value
                closing_frame_index = opening_frame_index + Math.min(max_alts_in_each_lst, (alternatives.length - closing_frame_index))

                // For storing part of array from the main alternatives
                part_of_alternatives = alternatives.slice(opening_frame_index, (closing_frame_index));

                //After storing current set of options, we need to store some extra options for the users (i.e next , previous, repeat etc...)
                //'next set of options' will be only available when there is realy next sets of options are available
                if (closing_frame_index &lt; alternatives.length) {
                    part_of_alternatives.push(`go to next set of options`)
                }
                //'previous set of options' will be only available when there is realy previous sets of options are available
                if (opening_frame_index &gt; 0) {
                    part_of_alternatives.push(`go to previous set of options`)
                }
                //'repeat' will be available all the time
                {
                    part_of_alternatives.push('repeating the list')
                }

                //For temporary storing current set (from opening frame to closing frame) of options (alternatives)
                for (let index in part_of_alternatives) {
                    temp += `Option ${Number(index) + 1} for ${part_of_alternatives[index]}.
`;
                }

                //For saying list of options (temp) + the execution stop key (this.stop_key)
                this.say(`${temp} . ${this.stop_key} for cancellation`);


                let tryAgain = true;
                //For getting option number from the user. It will try again and agin until a valid option number is found.
                while (tryAgain === true) {
                    selectedAlternative = this.getVoice(); //For asking and storing the input from the user voice

                    //For converting all letters into lower case for better matching
                    selectedAlternative = selectedAlternative.toLowerCase();

                    //For setting the selected alternative value in to number if there is any common string value
                    if ((selectedAlternative === 'option one') || (selectedAlternative === 'option 1')) {
                        selectedAlternative = 1;
                    }
                    else if ((selectedAlternative === 'option two') || (selectedAlternative === 'option 2')) {
                        selectedAlternative = 2;
                    }
                    else if ((selectedAlternative === 'option three') || (selectedAlternative === 'option 3')) {
                        selectedAlternative = 3;
                    }
                    else if ((selectedAlternative === 'option four') || (selectedAlternative === 'option 4')) {
                        selectedAlternative = 4;
                    }
                    else if ((selectedAlternative === 'option five') || (selectedAlternative === 'option 5')) {
                        selectedAlternative = 5;
                    }
                    else if ((selectedAlternative === 'option six') || (selectedAlternative === 'option 6')) {
                        selectedAlternative = 6;
                    }
                    else if ((selectedAlternative === 'option seven') || (selectedAlternative === 'option 7')) {
                        selectedAlternative = 7;
                    }
                    else if ((selectedAlternative == 'option eight') || (selectedAlternative === 'option 8')) {
                        selectedAlternative = 8;
                    }
                    else if ((selectedAlternative === 'option nine') || (selectedAlternative === 'option 9')) {
                        selectedAlternative = 9;
                    }
                    else if ((selectedAlternative === 'option ten') || (selectedAlternative === 'option 10')) {
                        selectedAlternative = 10;
                    }
                    else if ((selectedAlternative === 'option eleven') || (selectedAlternative === 'option 11')) {
                        selectedAlternative = 11;
                    }
                    else if ((selectedAlternative === 'option twelve') || (selectedAlternative === 'option 12')) {
                        selectedAlternative = 12;
                    }
                    else if ((selectedAlternative === 'option thirteen') || (selectedAlternative === 'option 13')) {
                        selectedAlternative = 13;
                    }
                    else if ((selectedAlternative === 'option fourteen') || (selectedAlternative === 'option 14')) {
                        selectedAlternative = 14;
                    }
                    else if ((selectedAlternative === 'option fifteen') || (selectedAlternative === 'option 15')) {
                        selectedAlternative = 15;
                    }
                    else if ((selectedAlternative === 'option sixteen') || (selectedAlternative === 'option 16')) {
                        selectedAlternative = 16;
                    }
                    else if ((selectedAlternative === 'option seventeen') || (selectedAlternative === 'option 17')) {
                        selectedAlternative = 17;
                    }
                    else if ((selectedAlternative === 'option eighteen') || (selectedAlternative === 'option 18')) {
                        selectedAlternative = 18;
                    }
                    else if ((selectedAlternative === 'option nineteen') || (selectedAlternative === 'option 19')) {
                        selectedAlternative = 19;
                    }
                    else if ((selectedAlternative === 'option twenty') || (selectedAlternative === 'option 20')) {
                        selectedAlternative = 20;
                    }

                    else if (selectedAlternative === this.stop_key) {
                        //For stoping the options function immediately
                        this.say('You have selected the cancel option. Execution will be cancelled.');
                        throw new Error('Cancelled');

                    }

                    else {
                        //For converting sring value into number value (e.g. "6" into 6)
                        selectedAlternative = Number(selectedAlternative);
                    };

                    //If not convertible to a valid number, then we must try again
                    if ((isNaN(selectedAlternative)) || (selectedAlternative === 0)) {
                        this.say('Please select a valid option in number');
                        tryAgain = true; //For looping again

                    }

                    //If convertible to a valid number
                    else {
                        //If selected option number is within the range of part of alternatives, than it must be a valid option
                        if (selectedAlternative &lt;= part_of_alternatives.length) {
                            tryAgain = false; //For stopting the loop

                            //for tempory storing the output value according to the option list.
                            let outputTemp = part_of_alternatives[selectedAlternative - 1];
                            if (outputTemp === 'go to next set of options') {
                                opening_frame_index = closing_frame_index; //For going to next set of option
                            }
                            else if (outputTemp === 'go to previous set of options') {

                                //Set the maximum avalible opeing frame index with respect to max_alts_in_each_lst value
                                opening_frame_index = opening_frame_index - Math.min(max_alts_in_each_lst, opening_frame_index)
                            }
                            else if (outputTemp === 'repeating the list') {
                                //Do nothing for repeating the list
                            }
                            else {
                                return outputTemp; //For returning the output
                            }

                        }
                        //If slected option number is outside of the range of part of alternatives, than we must try again
                        else {
                            this.say('Please select a option from the option list range');
                            tryAgain = true; //For looping again
                        }
                    }
                }
                temp = ``; //For resetting the temp value
            }
        }
    }

    //For Converting Tasker 's array into JavaScript 's array format
    arrayConverter(tasker_Array = "") {

        let converted_JS_Array = [] //For storing converted array
        let counter = 1; //As Tasker's array starts with index 1 (instead of 0)
        let eachCmd = global(`${tasker_Array}${counter}`); //Accessing 1st element of tasker_Array array

        let temp_Objectify_element = {}; //Will be used for temporary store Objectify data of each element

        // This loop will continue until eachCmd is a blank string (as in Tasker any undefined variable
        // will return an empty string from its JavaScript interface).
        while (eachCmd !== "") {

            //For converting String format into JS Object format and stores its temporary
            temp_Objectify_element = this.vclParser(eachCmd);

            //Store the Objectify element into the end of converted_JS_Array
            converted_JS_Array.push(temp_Objectify_element);

            counter += 1; //Incrementing counter by 1, for accessing next element

            eachCmd = global(`${tasker_Array}${counter}`); //Accessing next element of tasker_Array array

        }

        return converted_JS_Array; //Returns the converted array into JavaScript 's format
    }

    //For converting vcl data into JS object
    vclParser(vclData) {

        // To check whether the vclData is valid or corrupted. If indexOf() method does not find the
        // appropriate tag it returns -1 (negative one). So if -1 value is return we can activate the
        // condition and throw a custom error message.
        if (vclData.indexOf("&lt;Name&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Opening name tag error");
            flash("command data error: Opening name tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Opening name tag error");
        }
        else if (vclData.indexOf("&lt;/Name&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Closing name tag error");
            flash("command data error: Closing name tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Closing name tag error");
        }
        else if (vclData.indexOf("&lt;Version&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Opening version tag error");
            flash("command data error: Opening version tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Opening version tag error");
        }
        else if (vclData.indexOf("&lt;/Version&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Closing version tag error");
            flash("command data error: Closing version tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Closing version tag error");
        }
        else if (vclData.indexOf("&lt;Author&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Opening author tag error");
            flash("command data error: Opening author tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Opening author tag error");
        }
        else if (vclData.indexOf("&lt;/Author&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Closing author tag error");
            flash("command data error: Closing author tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Closing author tag error");
        }
        else if (vclData.indexOf("&lt;Description&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Opening description tag error");
            flash("command data error: Opening description tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Opening description tag error");
        }
        else if (vclData.indexOf("&lt;/Description&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Closing description tag error");
            flash("command data error: Closing description tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Closing description tag error");
        }
        else if (vclData.indexOf("&lt;Keywords&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Opening keywords tag error");
            flash("command data error: Opening keywords tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Opening keywords tag error");
        }
        else if (vclData.indexOf("&lt;/Keywords&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Closing keywords tag error");
            flash("command data error: Closing keywords tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Closing keywords tag error");
        }
        else if (vclData.indexOf("&lt;Codes&gt;&lt;![CDATA[") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Opening codes tag error");
            flash("command data error: Opening codes tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Opening codes tag error");
        }
        else if (vclData.indexOf("]]&gt;&lt;/Codes&gt;") === -1) {
            this.say("The command may be corrupted, you need to reinstall the command. command data error: Closing codes tag error");
            flash("command data error: Closing codes tag error");
            throw new Error("The command may be corrupted, you need to reinstall the command. command data error: Closing codes tag error");
        };

        //This object will be used for storing the parsed data from the vcl
        let vclObjectify = {};

        // To store the opeing name tag (i.e. &lt;name&gt;) position from the VCL data. Position of '&lt;Name&gt;',
        // but after the &lt;Name&gt; tag so, we need to add its length.
        let op_NamePos = vclData.indexOf("&lt;Name&gt;") + "&lt;Name&gt;".length;

        // To store the closing name tag (i.e. &lt;/name&gt;) position from the VCL data. We will use this
        // position as end position, which is already excluded in subString() 's end position parameter.
        let cl_NamePos = vclData.indexOf("&lt;/Name&gt;");

        // To store the opening version tag (i.e. &lt;Version&gt;) position from the VCL data. Position of
        // '&lt;Version&gt;' , but after the &lt;Version&gt; tag so, we need to add its length.
        let op_VerPos = vclData.indexOf("&lt;Version&gt;") + "&lt;Version&gt;".length;

        // To store the closing version tag (i.e. &lt;/Version&gt;) position from the VCL data. We will use
        // this position as end position, which is already excluded in subString() 's end position parameter.
        let cl_VerPos = vclData.indexOf("&lt;/Version&gt;");

        // To store the opeing author tag (i.e. &lt;Author&gt;) position from the VCL data. Position of '&lt;Author&gt;' ,
        // but after the &lt;Author&gt; tag so, we need to add its length.
        let op_AuthorPos = vclData.indexOf("&lt;Author&gt;") + "&lt;Author&gt;".length;

        // To store the closing author tag (i.e. &lt;/Author&gt;) position from the VCL data. We will use this position
        // as end position, which is already excluded in subString() 's end position parameter.
        let cl_AuthorPos = vclData.indexOf("&lt;/Author&gt;");

        // To store the opeing description tag (i.e. &lt;Description&gt;) position from the VCL data. Position of
        // '&lt;Description&gt;' , but after the &lt;Description&gt; tag so, we need to add its length.
        let op_DesPos = vclData.indexOf("&lt;Description&gt;") + "&lt;Description&gt;".length;

        // To store the closing description tag (i.e. &lt;/Description&gt;) position from the VCL data. We will use
        // this position as end position, which is already excluded in subString() 's end position parameter.
        let cl_DesPos = vclData.indexOf("&lt;/Description&gt;");

        // To store the opeing keywords tag (i.e. &lt;Keywords&gt;) position from the VCL data. Position of '&lt;Keywords&gt;',
        // but after the &lt;Keywords&gt; tag so, we need to add its length.
        let op_KeysPos = vclData.indexOf("&lt;Keywords&gt;") + "&lt;Keywords&gt;".length;

        // To store the closing keywords tag (i.e. &lt;/Keywords&gt;) position from the VCL data. We will use this
        // position as end position, which is already excluded in subString() 's end position parameter.
        let cl_KeysPos = vclData.indexOf("&lt;/Keywords&gt;");

        // To store the opeing codes tag (i.e. &lt;Codes&gt;&lt;![CDATA[) position from the VCL data. Position of
        // '&lt;Codes&gt;&lt;![CDATA[' , but after the &lt;Codes&gt;&lt;![CDATA[ tag so, we need to add its length.
        let op_CodesPos = vclData.indexOf("&lt;Codes&gt;&lt;![CDATA[") + "&lt;Codes&gt;&lt;![CDATA[".length;

        // To store the closing codes tag (i.e. ]]&gt;&lt;/Codes&gt;) position from the VCL data. We will use this position
        // as end position, which is already excluded in subString() 's end position parameter.
        let cl_CodesPos = vclData.indexOf("]]&gt;&lt;/Codes&gt;");

        //Placing each data to each element of the vclObectify object
        vclObjectify = {
            Name: vclData.substring(op_NamePos, cl_NamePos),
            Version: vclData.substring(op_VerPos, cl_VerPos),
            Author: vclData.substring(op_AuthorPos, cl_AuthorPos),
            Description: vclData.substring(op_DesPos, cl_DesPos),
            Keywords: vclData.substring(op_KeysPos, cl_KeysPos),
            Codes: vclData.substring(op_CodesPos, cl_CodesPos),
        }

        return vclObjectify; //Return the vclObjectify object


    }

    //For formatting default date string format (e.g. 10-02-2025) into more
    //readable / audible date format (e.g 10 February 2025)
    formatDate(dateStr) {

        //For spliting the date string with '-' and storing it into day_mnt_year_arr array
        //e.g day_mnt_year_arr = ["10", "02", "2025"]
        let day_mnt_year_arr = dateStr.split('-');

        //List of months
        const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

        //For returning the formatted date string.
        return `${day_mnt_year_arr[0]} ${months[parseInt(day_mnt_year_arr[1]) - 1]} ${day_mnt_year_arr[2]}`;
    }

    //For formatting the default time string format (e.g. 17.45) into more
    //readable / audible time format (e.g 5:45 PM)
    formatTime(timeStr) {

        //For spliting the time string with '.' and storing it into hour_min_arr array
        //e.g hour_min_arr = ["17","45"]
        let hour_min_arr = timeStr.split(".");

        if (hour_min_arr[0] &gt; 12) {
            return `${hour_min_arr[0] - 12}:${hour_min_arr[1]} PM`;
        }
        else if (hour_min_arr[0] == 12) {
            return `${hour_min_arr[0]}:${hour_min_arr[1]} PM`;
        }
        else if (hour_min_arr[0] == 12) {
            return `${hour_min_arr[0]}:${hour_min_arr[1]} AM`;
        }

    }




};

// For attaching VCSL class to the globalThis object 's as VCSL property
globalThis.VCSL = VCSL;




</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task55">
		<cdate>1734092290232</cdate>
		<edate>1740219484138</edate>
		<id>55</id>
		<nme>Default Values VCL Installer</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VCL_Installer</Str>
			<Str sr="arg1" ve="3">// VCL stands for Voice-Command-Loader file (naming by me N Paul😊) and can be used to
// share a command with another device 's Voice Command app. This is a VCL Installer
// written in JavaScript and it is used for installing the '.vcl' data to the Voice Commands.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can
// download source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383



//Importing and evaluating (using the Function constructor (without using the eval() function))
// Voice Control Support Library from global variable %VC_SL
new Function(global("VC_SL"))();


const VC_apis = new VCSL(); //For Creation of a new Voice Control Support Library object



// Pre-Installation Confirmation (Open)

// For accessing the actual content of the selected file by accessing the local variable '%temp'
// (which was set by previous action (e.g. readFile action))
let vclData = local("temp");


//Try to parse the vcl data and initialize the installation
try {

    // To check whether the vclData is valid or corrupted. If indexOf() method does not find the
    // appropriate tag it returns -1 (negative one). So if -1 value is return we can activate the
    // condition and throw a custom error message.
    if (vclData.indexOf("&lt;Name&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Opening name tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;/Name&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Closing name tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;Version&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Opening version tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;/Version&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Closing version tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;Author&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Opening author tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;/Author&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Closing author tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;Description&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Opening description tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;/Description&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Closing description tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;Keywords&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Opening keywords tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;/Keywords&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Closing keywords tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("&lt;Codes&gt;&lt;![CDATA[") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Opening codes tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    }
    else if (vclData.indexOf("]]&gt;&lt;/Codes&gt;") === -1) {

        //Set the .vcl data error message for future reference
        setLocal("vcl_installer_status", `&lt;p style='color:red'&gt;&lt;b&gt;vcl data error!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt; Closing codes tag error&lt;/P&gt;`);
        throw new Error("This vcl may be corrupted");
    };


    // To store the opeing name tag (i.e. &lt;name&gt;) position from the VCL data. Position of '&lt;Name&gt;' ,
    // but after the &lt;Name&gt; tag so, we need to add its length.
    let op_NamePos = vclData.indexOf("&lt;Name&gt;") + "&lt;Name&gt;".length;

    // To store the closing name tag (i.e. &lt;/name&gt;) position from the VCL data. We will use this
    // position as end position, which is already excluded in subString() 's end position parameter.
    let cl_NamePos = vclData.indexOf("&lt;/Name&gt;");

    // To store the opening version tag (i.e. &lt;Version&gt;) position from the VCL data. Position of
    // '&lt;Version&gt;' , but after the &lt;Version&gt; tag so, we need to add its length.
    let op_VerPos = vclData.indexOf("&lt;Version&gt;") + "&lt;Version&gt;".length;

    // To store the closing version tag (i.e. &lt;/Version&gt;) position from the VCL data. We will use
    // this position as end position, which is already excluded in subString() 's end position parameter.
    let cl_VerPos = vclData.indexOf("&lt;/Version&gt;");

    // To store the opeing author tag (i.e. &lt;Author&gt;) position from the VCL data. Position of '&lt;Author&gt;',
    // but after the &lt;Author&gt; tag so, we need to add its length.
    let op_AuthorPos = vclData.indexOf("&lt;Author&gt;") + "&lt;Author&gt;".length;

    // To store the closing author tag (i.e. &lt;/Author&gt;) position from the VCL data. We will use this
    // position as end position, which is already excluded in subString() 's end position parameter.
    let cl_AuthorPos = vclData.indexOf("&lt;/Author&gt;");

    // To store the opeing description tag (i.e. &lt;Description&gt;) position from the VCL data. Position of
    // '&lt;Description&gt;' , but after the &lt;Description&gt; tag so, we need to add its length.
    let op_DesPos = vclData.indexOf("&lt;Description&gt;") + "&lt;Description&gt;".length;

    // To store the closing description tag (i.e. &lt;/Description&gt;) position from the VCL data. We will
    // use this position as end position, which is already excluded in subString() 's end position parameter.
    let cl_DesPos = vclData.indexOf("&lt;/Description&gt;");

    // To store the opeing keywords tag (i.e. &lt;Keywords&gt;) position from the VCL data. Position of
    // '&lt;Keywords&gt;' , but after the &lt;Keywords&gt; tag so, we need to add its length.
    let op_KeysPos = vclData.indexOf("&lt;Keywords&gt;") + "&lt;Keywords&gt;".length;

    // To store the closing keywords tag (i.e. &lt;/Keywords&gt;) position from the VCL data. We will use this
    // position as end position, which is already excluded in subString() 's end position parameter.
    let cl_KeysPos = vclData.indexOf("&lt;/Keywords&gt;");

    // To store the opeing codes tag (i.e. &lt;Codes&gt;&lt;![CDATA[) position from the VCL data. Position of
    // '&lt;Codes&gt;&lt;![CDATA[' , but after the &lt;Codes&gt;&lt;![CDATA[ tag so, we need to add its length.
    let op_CodesPos = vclData.indexOf("&lt;Codes&gt;&lt;![CDATA[") + "&lt;Codes&gt;&lt;![CDATA[".length;

    // To store the closing codes tag (i.e. ]]&gt;&lt;/Codes&gt;) position from the VCL data. We will use this position
    // as end position, which is already excluded in subString() 's end position parameter.
    let cl_CodesPos = vclData.indexOf("]]&gt;&lt;/Codes&gt;");


    //For getting data from each tag of the '.vcl' file and store those as JavaScript variables
    let cmd_temp_name = vclData.substring(op_NamePos, cl_NamePos);
    let cmd_temp_author = vclData.substring(op_AuthorPos, cl_AuthorPos);
    let cmd_temp_version = vclData.substring(op_VerPos, cl_VerPos);
    let cmd_temp_description = vclData.substring(op_DesPos, cl_DesPos);
    let cmd_temp_keywords = vclData.substring(op_KeysPos, cl_KeysPos);
    let cmd_temp_codes = vclData.substring(op_CodesPos, cl_CodesPos);

    //For converting JavaScript 's variable to Tasker 's local variable (for showing on to 'CMD installation screen' scene)
    setLocal("cmd_temp_name", cmd_temp_name);
    setLocal("cmd_temp_author", cmd_temp_author);
    setLocal("cmd_temp_version", cmd_temp_version);
    setLocal("cmd_temp_description", cmd_temp_description);
    setLocal("cmd_temp_keywords", cmd_temp_keywords);
    setLocal("cmd_temp_codes", cmd_temp_codes);

    // Pre-Installation Confirmation (Close)


    //Initiate VCL installation process only if all tags of the vcl data have non-empty content
    if ((cmd_temp_name !== "") &amp;&amp; (cmd_temp_author !== "") &amp;&amp; (cmd_temp_version !== "") &amp;&amp; (cmd_temp_description !== "") &amp;&amp; (cmd_temp_keywords !== "") &amp;&amp; (cmd_temp_codes !== "")) {

        showScene("CMD installation screen", "DialogDim", 0, 0, false, true); //For showing the CMD installation screen

        //For reading and saving from the 'Installation_agreed' global variable
        let is_Installation_Agreed = global("Installation_agreed");

        //If the user confirm the installation
        if (is_Installation_Agreed === "YES") {

            // Post-Installation Confirmation (Open)

            //Geeting all installed commands into javascript 's array format
            let commands = VC_apis.arrayConverter("Cmd_DB");

            //last defined array position + 1; Or 1 (i.e. 0 + 1) incase of no previous elements in Cmd_DB array.
            let indexed = commands.length + 1;

            //For getting the name of current installable command
            let current_installable_cmd_name = cmd_temp_name;

            //For 'already_installed' checking. The default value is 'false', but it will be overwritten to 'true'
            // if a command with the same name is found in the 'Cmd_DB'
            let is_already_installed = false;

            // For accessing each command element from the commands array
            // If the commands array is empty, this check will be skipped because the 'for...of' loop does not execute
            // on empty arrays and we will have the default 'is_already_installed' value (i.e. false)
            for (eachCommand of commands) {

                // For acessing name string property from previously installed commands (e.g. "Call command by N Paul")
                let each_cmd_name_from_cmd_db = eachCommand.Name;

                // If the current command name matches with a previously installed command, it means the command was
                // already installed, so there's no need to install it again.
                if (each_cmd_name_from_cmd_db === current_installable_cmd_name) {

                    is_already_installed = true; //Set this flag value to true

                    //Set vcl_installer_status for already_installed command 
                    setLocal("vcl_installer_status", `&lt;p style='color:red'&gt; &lt;b&gt;Already Installed!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;p style='color:blue'&gt;${current_installable_cmd_name}&lt;/p&gt; is already installed and cannot be re-installed without uninstalling the installed one&lt;/P&gt;`);

                    break; //Exit from the loop

                }
            };

            //If the current command is not already installed, it will be installed
            if (is_already_installed === false) {

                // For installing the command
                // For accessing the content of the vcl file from local variable and set it to global
                // variable with indexed value (i.e. array in Tasker)
                setGlobal(`Cmd_DB${indexed}`, local("temp"));

                //For setting the installation successful message
                setLocal("vcl_installer_status", `&lt;p style='color:magenta'&gt; &lt;b&gt;Installed!:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;p style='color:blue'&gt;${current_installable_cmd_name}&lt;/p&gt; is sucessfully installed and ready to be used&lt;/P&gt;`);


            }

            // Post-Installation Confirmation (Close)

        }

        //If the user cancel the installation
        else {
            flash("Installation was cancelled by user...")

            //For setting the installation cancellation message
            setLocal("vcl_installer_status", `&lt;p style='color:blue'&gt;&lt;b&gt;Installation Cancelled!&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Installation was cancelled by user&lt;/P&gt;`);


        }

    }
    else {

        // Show the bad vcl data message
        flash("Bad vcl file or the vcl is corrupted");
    }
    ;
}

//Catch if any error was occured
catch (error) {
    flash(error.message)
}

//This codes block will always executes, regardless of whether an error occurred or not.
finally {
    performTask("Cmd Menu Update"); // For commands list updation
    setGlobal("Installation_agreed", ""); // For resetting 'Installation_agreed' global variable
    showScene("Alert", "DialogDim", 0, 0, false, false); // For showing the Alert scene
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task56">
		<cdate>1734092290232</cdate>
		<edate>1740085596427</edate>
		<id>56</id>
		<nme>Default Values VC Settings</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VC_Setting_Properties</Str>
			<Str sr="arg1" ve="3">{
"pitch_property" : 5,
"speed_property" : 5,
"max_options_property" : 5 ,
"visual_feedback" : "on",
"voice_language": "undefined"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task57">
		<cdate>1734092290232</cdate>
		<edate>1740085654022</edate>
		<id>57</id>
		<nme>Default Values VC Additional Settings</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%VC_Additional_Settings</Str>
			<Str sr="arg1" ve="3">{
"custom_vcsl" : "off",
"custom_vcl_installer" : "off",
"stop_key" : "cancel"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task58">
		<cdate>1735764988052</cdate>
		<edate>1735764988052</edate>
		<id>58</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Rectangle For Close Button</Str>
			<Str sr="arg2" ve="3">#FF0083FF</Str>
			<Str sr="arg3" ve="3">#FF0083FF</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
		</Action>
	</Task>
	<Task sr="task59">
		<cdate>1735766566206</cdate>
		<edate>1735766566206</edate>
		<id>59</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Codes</Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="400"/>
			<Int sr="arg4" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%new_val</lhs>
					<op>2</op>
					<rhs>on</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCSL Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="400"/>
			<Int sr="arg4" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%new_val</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
	</Task>
	<Task sr="task6">
		<cdate>1724174655848</cdate>
		<edate>1735931271834</edate>
		<id>6</id>
		<nme>Cmd Installer Manual</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
			<Str sr="arg1" ve="3">Cmd_name</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cmd_name_value</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
			<Str sr="arg1" ve="3">Cmd_author_name</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cmd_author_name_value</Str>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<label>Set the array element with 'structured' type data.</label>
			<Str sr="arg0" ve="3">%Cmd_DB(%indexed)</Str>
			<Str sr="arg1" ve="3">&lt;vcl&gt;
&lt;Name&gt;%cmd_name_value&lt;/Name&gt;
&lt;Version&gt;%cmd_version_value&lt;/Version&gt;
&lt;Author&gt;%cmd_author_name_value&lt;/Author&gt;
&lt;Description&gt;%cmd_description_value&lt;/Description&gt;
&lt;Keywords&gt;%cmd_keywords_value&lt;/Keywords&gt;
&lt;Codes&gt;&lt;![CDATA[

%cmd_codes_value

]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
		</Action>
		<Action sr="act12" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Saved...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act14" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Cmd Menu Update</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
			<Str sr="arg1" ve="3">Cmd_keywords</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cmd_keywords_value</Str>
		</Action>
		<Action sr="act3" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
			<Str sr="arg1" ve="3">Cmd_description</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cmd_description_value</Str>
		</Action>
		<Action sr="act4" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
			<Str sr="arg1" ve="3">Cmd_version</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cmd_version_value</Str>
		</Action>
		<Action sr="act5" ve="7">
			<code>195</code>
			<Str sr="arg0" ve="3">Command Add Manual</Str>
			<Str sr="arg1" ve="3">Cmd_codes</Str>
			<Int sr="arg2" val="2"/>
			<Str sr="arg3" ve="3">%cmd_codes_value</Str>
		</Action>
		<Action sr="act6" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<bool0>Or</bool0>
				<bool1>Or</bool1>
				<bool2>Or</bool2>
				<bool3>Or</bool3>
				<bool4>Or</bool4>
				<Condition sr="c0" ve="3">
					<lhs>%cmd_name_value</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%cmd_keywords_value</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
				<Condition sr="c2" ve="3">
					<lhs>%cmd_version_value</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
				<Condition sr="c3" ve="3">
					<lhs>%cmd_author_name_value</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
				<Condition sr="c4" ve="3">
					<lhs>%cmd_description_value</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
				<Condition sr="c5" ve="3">
					<lhs>%cmd_codes_value</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act7" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">Fill all necessary data, before saving</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>43</code>
			<label>We need to store all data into a structured array. If you use the default array push method then the 'structured' type is gone. So we need to manually set each variable of the array for keeping 'structured typed data'</label>
		</Action>
		<Action sr="act9" ve="7">
			<code>547</code>
			<label>last defined array position + 1.;
Or 1(i.e. 0+1) incase of no previous elements in Cmd_DB array.</label>
			<Str sr="arg0" ve="3">%indexed</Str>
			<Str sr="arg1" ve="3">%Cmd_DB(#)+1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task60">
		<cdate>1735766720799</cdate>
		<edate>1735766720799</edate>
		<id>60</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Codes</Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="400"/>
			<Int sr="arg4" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%new_val</lhs>
					<op>2</op>
					<rhs>on</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Advance Settings</Str>
			<Str sr="arg1" ve="3">Custom VCL Installer Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="400"/>
			<Int sr="arg4" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%new_val</lhs>
					<op>2</op>
					<rhs>off</rhs>
				</Condition>
			</ConditionList>
		</Action>
	</Task>
	<Task sr="task61">
		<cdate>1735767312950</cdate>
		<edate>1735767312950</edate>
		<id>61</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>377</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%td_button
Button
The label of the button that was clicked&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">Custom VC_SL</Str>
			<Str sr="arg2" ve="3">&lt;b&gt;VCSL is the core component of the Voice Commands system it provides some custom interface related functions which helps
to simplify the command programming.
You can used the default VCSL or custom VCSL. To use custom VCSL just enable the switch and provide the VCSL codes (in JavaScript)&lt;/b&gt;</Str>
			<Str sr="arg3" ve="3">Ok</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="120"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
	</Task>
	<Task sr="task62">
		<cdate>1735767447614</cdate>
		<edate>1735767447614</edate>
		<id>62</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>377</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%td_button
Button
The label of the button that was clicked&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">Custom .vcl installer</Str>
			<Str sr="arg2" ve="3">&lt;b&gt;VCL stands for Voice-Command-Loader file (naming by me N Paul 😅) and can be used to share a command with another device 's Voice Command app. VCL installer is used for installing Command to the Voice Commands system. You can used the default vcl installer or custom. To use custom .vcl installer just enable the switch and provide the JS codes.&lt;/b&gt;</Str>
			<Str sr="arg3" ve="3">Ok</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="120"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
	</Task>
	<Task sr="task63">
		<cdate>1735931445620</cdate>
		<edate>1740209445120</edate>
		<id>63</id>
		<nme>All Default Values</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">&lt;h1&gt;Initialising, please wait: &lt;/h1&gt;
&lt;h3&gt;Steps 1 out of 4&lt;/h3&gt;
&lt;br&gt;(1) Installing .vcl installer ...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Values VCL Installer</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">&lt;h1&gt;Please wait: &lt;/h1&gt;
&lt;h3&gt;Steps 4 out of 4&lt;/h3&gt;
&lt;br&gt;(1) Installing .vcl installer -- DONE
&lt;br&gt;(2) Resetting settings values -- DONE
&lt;br&gt;(3) Installing default commands -- DONE
&lt;br&gt;(4) Installing VCSL -- DONE
&lt;h5&gt;Initialisation completed&lt;/h5&gt;</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>390</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">YesOrNo</Str>
			<Str sr="arg2" ve="3">Get Contacts</Str>
			<Str sr="arg3" ve="3">Do you want to update Voice Commands 's contact database?</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="120"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%input</lhs>
					<op>2</op>
					<rhs>yes</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act13" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">GetContactsDB</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act15" ve="7">
			<code>30</code>
			<Int sr="arg0">
				<var>250</var>
			</Int>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">&lt;h1&gt;Initialising, please wait: &lt;/h1&gt;
&lt;h3&gt;Steps 2 out of 4&lt;/h3&gt;
&lt;br&gt;(1) Installing .vcl installer -- DONE
&lt;br&gt;(2) Resetting settings values...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Values VC Settings</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Values VC Additional Settings</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">&lt;h1&gt;Initialising, please wait: &lt;/h1&gt;
&lt;h3&gt;Steps 3 out of 4&lt;/h3&gt;
&lt;br&gt;(1) Installing .vcl installer -- DONE
&lt;br&gt;(2) Resetting settings values -- DONE
&lt;br&gt;(3) Installing default commands...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Commands</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Listner Commands</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Custom Toast Alert</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">&lt;h1&gt;Initialising, please wait: &lt;/h1&gt;
&lt;h3&gt;Steps 4 out of 4&lt;/h3&gt;
&lt;br&gt;(1) Installing .vcl installer -- DONE
&lt;br&gt;(2) Resetting settings values -- DONE
&lt;br&gt;(3) Installing default commands -- DONE
&lt;br&gt;(4) Installing VCSL...</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Default Value VC_SL</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task64">
		<cdate>1735936502461</cdate>
		<edate>1735936502461</edate>
		<id>64</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>390</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">TTSVoice</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="120"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>590</code>
			<Str sr="arg0" ve="3">%input</Str>
			<Str sr="arg1" ve="3">:</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%input2</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
	</Task>
	<Task sr="task65">
		<cdate>1736234372961</cdate>
		<edate>1740125673745</edate>
		<id>65</id>
		<nme>Get Voice Custom</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Result_Get_Voice</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>903</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="25"/>
			<Int sr="arg5" val="1"/>
			<Bundle sr="arg6">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%gv_confidence
Confidence
Value from 0 to 100 showing the confidence of the detected value&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%gv_heard
Heard
List of possible variations of what was heard&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Result_Get_Voice</Str>
			<Str sr="arg1" ve="3">%gv_heard</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%Result_Get_Voice</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
	</Task>
	<Task sr="task7">
		<cdate>1725459388221</cdate>
		<edate>1725459388221</edate>
		<id>7</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Cmd Installer Manual</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
	<Task sr="task8">
		<cdate>1735337361146</cdate>
		<edate>1735337361146</edate>
		<id>8</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>390</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">TTSVoice</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="120"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>590</code>
			<Str sr="arg0" ve="3">%input</Str>
			<Str sr="arg1" ve="3">:</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Settings</Str>
			<Str sr="arg1" ve="3">TTS Language</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%input2</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
	</Task>
	<Task sr="task80">
		<cdate>1738188318614</cdate>
		<edate>1738188318614</edate>
		<id>80</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>377</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%td_button
Button
The label of the button that was clicked&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">Forcefully launch Voice Commands by pressing assistant key</Str>
			<Str sr="arg2" ve="3">&lt;b&gt;
Note: On some devices, changing the default Assistant app may only affect the on-screen Assistant button. The physical Assistant key may still launch Google Assistant or Gemini by default. And this option will helpful for those devices.
&lt;br&gt;

This option allows you to forcefully launch Voice Commands Assistant service even if the default behaviour of the assistant key (e.g. long pressing on the media button of bluetooth headset) only launches Google Assistant or Gemini.
&lt;/b&gt;</Str>
			<Str sr="arg3" ve="3">Ok</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="120"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<Str sr="arg9" ve="3"/>
		</Action>
	</Task>
	<Task sr="task81">
		<cdate>1738220860583</cdate>
		<edate>1738327802207</edate>
		<id>81</id>
		<nme>VC Assistant (Forcefully)</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>245</code>
		</Action>
		<Action sr="act1" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="3"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%Assistant_listner_cmd</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%vcl_codes_for_execution</Str>
			<Str sr="arg1" ve="3">%Assistant_listner_cmd.Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">VCL Executor</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">%vcl_codes_for_execution</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act6" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">new Function(global("VC_SL"))();
const VC_apis = new VCSL();

let text = `Assistant Commamd is not set, kindly set a Command for assistant listner to use this feature.`

VC_apis.say(text);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task82">
		<cdate>1738221303409</cdate>
		<edate>1740124721936</edate>
		<id>82</id>
		<nme>VCL Executor</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>523</code>
			<Str sr="arg0" ve="3">VCL Execution</Str>
			<Str sr="arg1" ve="3">Voice Commands codes execution is running...</Str>
			<Str sr="arg10" ve="3"/>
			<Str sr="arg11" ve="3">Notification</Str>
			<Str sr="arg12" ve="3"/>
			<Img sr="arg2" ve="2"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
			<Str sr="arg9" ve="3"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%codes_to_executed</Str>
			<Str sr="arg1" ve="3">%par1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">eval(local("codes_to_executed"));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3">
				<var>600</var>
			</Int>
		</Action>
		<Action sr="act3" ve="7">
			<code>779</code>
			<Str sr="arg0" ve="3">VCL Execution</Str>
			<Int sr="arg1" val="0"/>
		</Action>
	</Task>
	<Task sr="task83">
		<cdate>1738582347411</cdate>
		<edate>1740048243473</edate>
		<id>83</id>
		<nme>Phone Ringing</nme>
		<pri>6</pri>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%Phone_ringing_listner_cmd</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%caller_data</Str>
			<Str sr="arg1" ve="3">%evtprm1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%vcl_codes_for_execution</Str>
			<Str sr="arg1" ve="3">%Phone_ringing_listner_cmd.Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">eval(local("vcl_codes_for_execution"));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3">
				<var>600</var>
			</Int>
		</Action>
		<Action sr="act4" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act5" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">new Function(global("VC_SL"))();
const VC_apis = new VCSL();

let text = `Phone ringing command is not set, kindly set a Command for phone ringing listner to use this feature.`

VC_apis.say(text);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task84">
		<cdate>1738220860583</cdate>
		<edate>1740047602275</edate>
		<id>84</id>
		<nme>VC Assistant</nme>
		<pri>6</pri>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%Assistant_listner_cmd</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%vcl_codes_for_execution</Str>
			<Str sr="arg1" ve="3">%Assistant_listner_cmd.Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">VCL Executor</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">%vcl_codes_for_execution</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act4" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">new Function(global("VC_SL"))();
const VC_apis = new VCSL();

let text = `Assistant Commamd is not set, kindly set a Command for assistant listner to use this feature.`

VC_apis.say(text);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task85">
		<cdate>1738582347411</cdate>
		<edate>1740043181349</edate>
		<id>85</id>
		<nme>Missed Call</nme>
		<pri>6</pri>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%Missed_call_listner_cmd</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%caller_data</Str>
			<Str sr="arg1" ve="3">%evtprm1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%vcl_codes_for_execution</Str>
			<Str sr="arg1" ve="3">%Missed_call_listner_cmd.Codes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">eval(local("vcl_codes_for_execution"));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3">
				<var>600</var>
			</Int>
		</Action>
		<Action sr="act4" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act5" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">new Function(global("VC_SL"))();
const VC_apis = new VCSL();

let text = `Missed call command is not set, kindly set a Command for missed call listner to use this feature.`

VC_apis.say(text);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task87">
		<cdate>1740041613971</cdate>
		<edate>1740220364737</edate>
		<id>87</id>
		<nme>Default Commands</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>357</code>
			<Str sr="arg0" ve="3">%Cmd_DB</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>357</code>
			<Str sr="arg0" ve="3">%Cmd_lst</Str>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<label>Missed Call</label>
			<Str sr="arg0" ve="3">%Cmd_DB9</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
  &lt;Name&gt;Missed Call command&lt;/Name&gt;
  &lt;Version&gt;v1.0.0&lt;/Version&gt;
  &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
  &lt;Description&gt;This command is designed for working with Missed Call Listner Service event. Whenever there is a missed call occur this command will say the missed call caller name (If this command was previously assigned with Missed Call Listner Service event from the setting)&lt;/Description&gt;
  &lt;Keywords&gt;[works with Missed Call Listner Service event]&lt;/Keywords&gt;
  &lt;Codes&gt;&lt;![CDATA[

// Missed Call command is responsible for saying missed call caller name.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383).
// You can download source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//Importing and evaluating (using the Function constructor (without using the eval() function))
// Voice Control Support Library from global variable %VC_SL
new Function(global("VC_SL"))();


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

// For getting ringer volume value before changing it
let old_Ringer_Vol = global("VOLR")

// For changing the ringer volume
ringerVol(0,false,false)

// For accessing the caller name from global variable "%CNAME"
let caller = global("CNAME");


// For saying the missed call caller name
VC_apis.say(`You have a missed call from ${caller}.
You have received a missed call from ${caller}`)

// For changing the ringer volume to its old value
ringerVol(parseInt(old_Ringer_Vol),false,false)

  ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>547</code>
			<label>Repeat</label>
			<Str sr="arg0" ve="3">%Cmd_DB10</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
 &lt;Name&gt;Repeat Command&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;Repeat command: Tests VCSL 's voice input and output functionality. When activated, the command prompts the system to repeat back the user's spoken input, allowing for verification of correct speech recognition and speech playback.&lt;/Description&gt;
 &lt;Keywords&gt;repeat, tell the same, audio mirror, say, repeat back, echo, mirror audio, replay&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[
// Repeat command: Tests VCSL 's voice input and output functionality.
// When activated, the command prompts the system to repeat back the
// user's spoken input, allowing for verification of correct speech
// recognition and speech playback.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

//For getting user queries (user 's raw command) data from the global property VC_OInfos. (e.g. "repeat this is sample text for repeating")
let userQueries = VC_OInfos.userQueries;

//For getting the key value (by which this command is called) from the global property VC_OInfos. (e.g. "repeat")
let matchedKey = VC_OInfos.matchedKey;

//For getting the only repeating text portion from the userQueries string , we subtract matchedKey from the userQueries.
//(e.g. userQueries: "repeat this is sample text for repeating" , then the repeating text: "this is sample text for repeating")
let repeat_text = userQueries.slice(matchedKey.length);

//For removing whitespace from both sides
repeat_text = repeat_text.trim();

VC_apis.say(`You said: ${repeat_text}`); //For saying the output


 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>547</code>
			<label>Wikipedia</label>
			<Str sr="arg0" ve="3">%Cmd_DB11</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
 &lt;Name&gt;Wikipedia Command&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;Wikipedia Command is a command use for fetching basic information from Wikipedia.&lt;/Description&gt;
 &lt;Keywords&gt;wikipedia, give me information about, info, information, wiki&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[

// Wikipedia Command is a command use for fetching basic information from Wikipedia using the rest API.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383


// For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

// For getting user queries (user 's raw command) data from the global property VC_OInfos.
// (e.g. "Wikipedia JavaScript")
let userQueries = VC_OInfos.userQueries;

// For getting the key value (by which this command is called) from the global property VC_OInfos.
// (e.g. "wikipedia")
let matchedKey = VC_OInfos.matchedKey;

// For getting the only article name portion from the userQueries string , we subtract matchedKey
// from the userQueries. (e.g. userQueries: "Wikipedia JavaScript" , then the articleName: "JavaScript")
let articleName = userQueries.slice(matchedKey.length);

//For removing whitespace from both sides
articleName = articleName.trim();

// For storing the fetched introduction information from wikipedia
let info_from_Wikipedia = ``;


//This function will fetch the information from Wikipedia page using the rest api.
function fetch_from_Wikipedia(topic) {

    //URL for getting information
    let url = "https://en.wikipedia.org/api/rest_v1/page/summary/" + encodeURIComponent(topic);

    //We have used XMLHttpRequest() for data fetching
    let dataFetcher = new XMLHttpRequest();

    //For initializing the fetching request using synchronous request [ dataFetcher.open(method, url, async) ]
    dataFetcher.open("GET", url, false);

    //For sending the request to the server
    dataFetcher.send();

    //If the response was received from the server (status code: 200)
    if (dataFetcher.status === 200) {

        //For parsing the JSON response and storing it into data variable
        let data = JSON.parse(dataFetcher.responseText);

        //If the data has the extract property then that data must be returned, 
        //otherwise there is no information about that topic on the Wikipedia
        if (data.extract) {

            return data.extract;

        } else {

            return "No information found.";

        }
    }

    //If there is an error while fetching data from the server, then error message should be returned
    else {
        return "Error while fetching data from Wikipedia.";
    }
};

// For feting the information from wikipedia and store the information
info_from_Wikipedia = fetch_from_Wikipedia(articleName);

//For saying the information
VC_apis.say(info_from_Wikipedia);







 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>547</code>
			<label>VCSL Info</label>
			<Str sr="arg0" ve="3">%Cmd_DB12</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
  &lt;Name&gt;VCSL_Info&lt;/Name&gt;
  &lt;Version&gt;v1.0.0&lt;/Version&gt;
  &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
  &lt;Description&gt;VCSL_Info command can retrieve basic information from the current installed VC_Sl (Voice Commands Support Library).&lt;/Description&gt;
  &lt;Keywords&gt;VCSL, info, about, Voice Commands Support Library, information&lt;/Keywords&gt;
  &lt;Codes&gt;&lt;![CDATA[

// VCSL_Info command can retrieve basic information from the current installed VC_Sl (Voice Control Support Library).
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

let ver = VC_apis.info.VCSL_Version; //For getting current VCSL version

let auth_name = VC_apis.info.VCSL_Author; //For getting current VCSL author name

let auth_github_prfl = VC_apis.info.VCSL_Author_Github; //For getting current VCSL author github profile


const options = ["Yes" , "No"]; //Options

VC_apis.say(`Current Voice Control Support Library's version: ${ver}. Developed by ${auth_name}. Do you want to visit his profile?`)

let selectedOptn = VC_apis.options(...options); //For interacting with our options

if (selectedOptn === "Yes") {
    VC_apis.say("Visiting the profile page...")
    browseURL(auth_github_prfl)
}
else {
    //Do nothing
}

  ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>547</code>
			<label>Battery Command</label>
			<Str sr="arg0" ve="3">%Cmd_DB13</Str>
			<Str sr="arg1" ve="3">&lt;vcl&gt;
 &lt;Name&gt;Battery Command&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;Battery Command can give the battery level information of the device.&lt;/Description&gt;
 &lt;Keywords&gt;battery, device's battery, current battery level&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[
// Battery Command can give the battery level information of the device.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383


// For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

//For getting the Battery level info from global variable %BATT and storing it
let battery_level = global("BATT");

//For saying the battery level
VC_apis.say(`The device's current battery level is ${battery_level}%`)


 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>547</code>
			<label>Bluetooth Battery Command</label>
			<Str sr="arg0" ve="3">%Cmd_DB14</Str>
			<Str sr="arg1" ve="3">
&lt;vcl&gt;
 &lt;Name&gt;Bluetooth Battery Command&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;Bluetooth Battery Command can give battery level information of the current connected Bluetooth device.&lt;/Description&gt;
 &lt;Keywords&gt;bluetooth battery, battery of bluetooth&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[
// Bluetooth Battery Command can give battery level information of the current connected Bluetooth device.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383


// For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

//For clearing the global variable: %Bluetooth_Device_Info
setGlobal("Bluetooth_Device_Info", "")

//For calling our 'Custom Function Bluetooth Device Info' task and wait upto 3 sec for it to be completed.
VC_apis.performTaskWait("Custom Function Bluetooth Device Info", 500, 3000);

//For getting the value from global variable: %Bluetooth_Device_Info
let bt_device_info = global("Bluetooth_Device_Info");

//If bt_device_info is a empty string that means "Custom Function Bluetooth Device Info" function
//does not store any value to it
if (bt_device_info === "") {

    //For saying custom error message
    VC_apis.say(`Error while trying to get information about bluetooth device.`);

}
else {

    //For clearing the global variable: %Bluetooth_Device_Info
    setGlobal("Bluetooth_Device_Info", "")

    //For parsing bluetooth device info from the String format to JSON object format and store it back
    bt_device_info = JSON.parse(bt_device_info);

    //For converting and storing "bt_connected" property 's value (which is string format) into "isConnected" array
    let isConnected = bt_device_info.bt_connected.split(",");

    //For finding the index of the first occurrence of "true" value in the "isConnected" array
    let connected_device_index = isConnected.indexOf("true");

    //If connected_device_index value is equal to negetive one (-1) that means there are no
    //occurrence of "true" value in the "isConnected" array, which means no bluetooth devices
    //are currently connected
    if (connected_device_index === -1) {
        //For saying
        VC_apis.say("There are no Bluetooth devices currently connected");
    }
    else {
        //For storing our information
        let msg = `${bt_device_info.bt_name.split(",")[connected_device_index]} is currently
connected and the battery level is ${bt_device_info.bt_battery_level.split(",")[connected_device_index]}%`;

        //For saying the information
        VC_apis.say(msg);
    }

}

//This is sample data format of bt_device_info
// bt_device_info = {
// "bt_address": "...,...,..." ,
// "bt_alias": "Airdopes 161,realme 8i,Rockerz 235 Pro" ,
// "bt_battery_level": "%bt_battery_level1,%bt_battery_level2,60" ,
// "bt_class": "1028,524,1028" ,
// "bt_connected": "false,false,true" ,
// "bt_encrypted": "false,false,true" ,
// "bt_major_class" : "1024,512,1024" ,
// "bt_major_class_name": "Audio / Video,Phone,Audio / Video" ,
// "bt_name": "Airdopes 161,realme 8i,Rockerz 235 Pro" ,
// "bt_paired": "true,true,true" ,
// "bt_signal_strength": "%bt_signal_strength1,%bt_signal_strength2,0" ,
// "bt_type": "classic,dual,classic"
// }


 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>547</code>
			<label>Random Fact Command</label>
			<Str sr="arg0" ve="3">%Cmd_DB15</Str>
			<Str sr="arg1" ve="3">
&lt;vcl&gt;
 &lt;Name&gt;Random Fact Command&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;Random Fact Command can give random fact from https://uselessfacts.jsph.pl/ .The api (https://uselessfacts.jsph.pl/) which is used in this command is created by Joseph Paul (https://jsph.pl/)&lt;/Description&gt;
 &lt;Keywords&gt;random fact, give me random fact, random information, useless fact, useless information&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[
// Random Fact Command can give random fact from https://uselessfacts.jsph.pl/
// The api (https://uselessfacts.jsph.pl/) which is used in this command is created by Joseph Paul (https://jsph.pl/)
// This command file is created by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383


// For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();


// For storing the fetched random fact from https://uselessfacts.jsph.pl/
let random_fact = ``;


//This function will fetch the random fact from https://uselessfacts.jsph.pl/
function random_fact_fetcher() {

    //URL for getting random fact
    let url = "https://uselessfacts.jsph.pl/api/v2/facts/random";

    //We have used XMLHttpRequest() for data fetching
    let dataFetcher = new XMLHttpRequest();

    //For initializing the fetching request using synchronous request [ dataFetcher.open(method, url, async) ]
    dataFetcher.open("GET", url, false);

    //For sending the request to the server
    dataFetcher.send();

    //If the response was received from the server (status code: 200)
    if (dataFetcher.status === 200) {

        //For parsing the JSON response and storing it into data variable
        let data = JSON.parse(dataFetcher.responseText);

        //For returning the random fact
        return data.text;

    }

    //If there is an error while fetching data from the server, then error message should be returned
    else {
        return "Error while fetching random fact from uselessfacts.jsph.pl";
    }
};

// For feting the fact and store the information
random_fact = random_fact_fetcher()

//For saying the information
VC_apis.say(random_fact);

 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">Cmd Menu Update</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<label>VC_Engine</label>
			<Str sr="arg0" ve="3">%Cmd_DB1</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
  &lt;Name&gt;VC_Engine&lt;/Name&gt;
  &lt;Version&gt;v1.0.0&lt;/Version&gt;
  &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
  &lt;Description&gt;VC_engine is a launcher type command responsible for calling appropriate commands with their appropriate keywords and execute them for the user.&lt;/Description&gt;
  &lt;Keywords&gt;[works with Assistant Listener Service Event and doesn't has any keys]&lt;/Keywords&gt;
  &lt;Codes&gt;&lt;![CDATA[
    
// VC_engine is a launcher type command responsible for calling appropriate commands with
// their appropriate keywords and execute them for the user. This project is originally made
// by me (N Paul) (https://github.com/nirmalpaul383). You can download source files from my
// github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//Importing and evaluating (using the Function constructor (without using the eval() function))
//Voice Control Support Library from global variable %VC_SL
new Function(global("VC_SL"))();

const VC_apis = new VCSL(); //For Creation of a new Voice Control Support Library object
let commands = VC_apis.arrayConverter("Cmd_DB"); //Geeting all installed commands into javascript's array format

//For telling the user that the voice command 's listing is started
VC_apis.say("Listening...")

//For getting user voice command into userQueries variable (e.g. user: "  Note this data is to be noted   ").
let userQueries = VC_apis.getVoice();

//For removing whitespace from the userQueries and store it back to the userQueries
//(e.g. "Note this data is to be noted").
userQueries = userQueries.trim();


//For converting the userQueries into lowercase and store it to the tempQueries
//(in this example "note this data is to be noted")
let tempQueries = userQueries.toLowerCase();


let cmdCodes = ``; //Will be used for storing codes from command (if any matching keywoard found)
let matchedKey = ``; //Will be used for storing the matched keyword (if any matching keywoard found)

//For accessing each command element from the commands array
for (eachCommand of commands) {

    //For acessing keywords string property from each command (e.g. " nOte , notEpad, Write,writepaD")
    let eachCmdKeys = eachCommand.Keywords;

    //For converting String to Array with the "," spliter and store it back to the eachCmdKeys (e.g. [" nOte "," notEpad"," Write","writepaD"])
    eachCmdKeys = eachCmdKeys.split(",");

    //If any maching is found then this varibale will be used for breaking the outer loop
    let breakOuterLoop = false;

    for (index in eachCmdKeys) {

        //For removing whitespace from each keys and store it back to its previous index position in the
        // eachCmdKeys array (e.g. "nOte" , "notEpad" , "Write" , "writepaD")
        eachCmdKeys[index] = eachCmdKeys[index].trim();

        //For converting each keys into lowercase and store it back to its previous index position in the
        //eachCmdKeys array (e.g. "note" , "notepad" , "write" , "writepad")
        eachCmdKeys[index] = eachCmdKeys[index].toLowerCase();


        //For checking if the keyword of the command is in the user queries or not
        let isKeyWordMatch = tempQueries.startsWith(eachCmdKeys[index]);

        if (isKeyWordMatch) {

            //For acessing codes property from each command (e.g. "console.log("hello world")")
            cmdCodes = eachCommand.Codes;

            matchedKey = eachCmdKeys[index]; //For storing the matched key for future reference

            breakOuterLoop = true; //Will be used for breaking the outer loop

            break; //Break this inner loop
        }
    }
    if (breakOuterLoop === true) {
        break; //Break this outer loop
    }


}

//If matched Key value was set thats mean matched key was found. Only then the appropiate
//command 's codes will be executed
if (matchedKey) {

    //For attaching Other Information to the globalThis object 's as property
    globalThis.VC_OInfos = { "userQueries": userQueries, "matchedKey": matchedKey };

    //Try to execute the appropriate commands code , if it is possible then it will try to
    //execute it otherwise say the the error message
    try {

        new Function(cmdCodes)(); //For evaluating codes from matching command
    }
    catch (error) {


        if (error.message === "Cancelled") {
            //If the error message is "Cancelled" that means the cancelled alternative was
            //selected by the user. No further action is necessary.
        }
        else {
            VC_apis.say(`Code error: Error: ${error.message}`); //For saying the error message

            flash(`${error.message}`); //For flashing the error message
        }
    }
}

//If matched Key value was NOT SET thats mean matched key was not found.
else {
    VC_apis.say("Voice Command does not have the appropriate command to do that")
};

  ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>547</code>
			<label>Clock &amp; Calendar</label>
			<Str sr="arg0" ve="3">%Cmd_DB2</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
  &lt;Name&gt;Clock &amp; Calender command&lt;/Name&gt;
  &lt;Version&gt;v1.0.0&lt;/Version&gt;
  &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
  &lt;Description&gt;Time &amp; Date command can give the current time and date details.&lt;/Description&gt;
  &lt;Keywords&gt;current date, current time, now, clock, calendar&lt;/Keywords&gt;
  &lt;Codes&gt;&lt;![CDATA[

// Clock command can give the current time and date details.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

let current_Date = global("DATE"); //For getting the current date
let current_Time = global("TIME"); //For getting the current time
let dayOfWeek = global("DAYW"); //For getting the day of week

//For formatting the date string into more readable / audible date format and store it back
current_Date = VC_apis.formatDate(current_Date)

//For formatting the time string into more readable / audible date format and store it back
current_Time = VC_apis.formatTime(current_Time)

//For saying the current date and time
VC_apis.say(`Today is ${dayOfWeek}, ${current_Date} , the current time is ${current_Time}`);


  ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>547</code>
			<label>Calculator</label>
			<Str sr="arg0" ve="3">%Cmd_DB3</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
 &lt;Name&gt;Calculator Command&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;A simple calculator command for evaluating simple math expressions (e.g "calculate 22 +358")&lt;/Description&gt;
 &lt;Keywords&gt;calculate, calculator, math expression&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[
// Calculator command is for evaluating simple math expressions
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

//For getting user queries (user 's raw command) data from the global property VC_OInfos. (e.g. "calculate 5 + 3 +24")
let userQueries = VC_OInfos.userQueries;

//For getting the key value (by which this command is called) from the global property VC_OInfos. (e.g. "calculate")
let matchedKey = VC_OInfos.matchedKey;

//For getting the only math expression portion from the userQueries string , we subtract matchedKey from the userQueries.
//(e.g. userQueries: "calculate 5 + 3 +24" , then the mathExpression: "5 + 3 +24")
let mathExpression = userQueries.slice(matchedKey.length);

//For removing whitespace from both sides
mathExpression = mathExpression.trim();

//Function for evaluating math expression without using the eval() function
function evaluate(expression) {
    return new Function('return ' + expression)();
};

let result = evaluate(mathExpression); //For evaluating math expression and storing it in to result variable

VC_apis.say(`The calculation answer is ${result}`); //For saying the calculation result
  
 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>547</code>
			<label>Call</label>
			<Str sr="arg0" ve="3">%Cmd_DB4</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
  &lt;Name&gt;Call_Cmd&lt;/Name&gt;
  &lt;Version&gt;v1.0.0&lt;/Version&gt;
  &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
  &lt;Description&gt;Call_cmd is a command responsible for calling appropriate phone number with their appropriate name (e.g. "call suresh"). You can use "type" attribute for typing individual letter (e.g. "call type s u r e s h" will be processed as "call suresh")&lt;/Description&gt;
  &lt;Keywords&gt;call, contact, phone, make a call&lt;/Keywords&gt;
  &lt;Codes&gt;&lt;![CDATA[
// Call_cmd is a command responsible for calling appropriate phone number with their appropriate name.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC = new VCSL();

// For getting user queries (user 's raw command) data from the global property VC_OInfos. (e.g. "call Ramesh")
let userQueries = VC_OInfos.userQueries;

// For getting the key value (by which this command is called) from the global property VC_OInfos. (e.g. "call")
let matchedKey = VC_OInfos.matchedKey;

// For getting 'Contacts_DB' value as JavaScript 's variable and convert into a JSON format
let Contacts_DB = JSON.parse(global('Contacts_DB'));

// For getting the only name portion from the userQueries string , we subtract matchedKey from the userQueries.
// (e.g. userQueries: "call ramesh" , then the contactName: "ramesh")
let contactName = userQueries.slice(matchedKey.length);

//For removing whitespace from both sides
contactName = contactName.trim();

contactName = contactName.toLowerCase(); //For converting the contactName into lowercase and store it back

// If the string has an additional sub-command, such as 'type' (which allows typing every letter individually),
// this aditional step is required to refine the 'contactName'
if (userQueries.indexOf('type') !== -1) {

    //For getting the only name portion from contactName (i.e. contactsName string , less.: 'type' )
    contactName = contactName.replace("type", "");
}

let matchedContacts = []; // Will be used for storing matched contact name

for (index in Contacts_DB) {


    // This variable will be used for storing the contact name from the Contact_DB by using their index value.
    // In this case the index value is the key value and will be used for getting number from Contacts_DB (JSON)
    // and we can not modify it , so we store a copy in here
    let nameFromContactsDB = index;


    //This code block will refine the name from contacts DB for better matching by removing some special
    // characters in their name
    {

        nameFromContactsDB = nameFromContactsDB.replaceAll(".", "")
        nameFromContactsDB = nameFromContactsDB.replaceAll("(", "")
        nameFromContactsDB = nameFromContactsDB.replaceAll(")", "")
        nameFromContactsDB = nameFromContactsDB.replaceAll("{", "")
        nameFromContactsDB = nameFromContactsDB.replaceAll("}", "")
        nameFromContactsDB = nameFromContactsDB.replaceAll("[", "")
        nameFromContactsDB = nameFromContactsDB.replaceAll("]", "")
        nameFromContactsDB = nameFromContactsDB.replaceAll("#", "")

        // If the string has an additional sub-command, such as 'type' (which allows typing every letter individually),
        // this aditional step is required to refine the nameFromContactsDB
        if (userQueries.indexOf('type') !== -1) {

            //For ignoring spaces between the individual characters (e.g. 'r a m e s h' -&gt; 'ramesh')
            nameFromContactsDB = nameFromContactsDB.replace(" ", "");
        }
    }

    // This code block will refine the name from user queries for better matching by removing some special
    // characters in their name
    {
        contactName = contactName.replaceAll(".", "")
        contactName = contactName.replaceAll("(", "")
        contactName = contactName.replaceAll(")", "")
        contactName = contactName.replaceAll("{", "")
        contactName = contactName.replaceAll("}", "")
        contactName = contactName.replaceAll("[", "")
        contactName = contactName.replaceAll("]", "")
        contactName = contactName.replaceAll("#", "")

        // If the string has an additional sub-command, such as 'type' (which allows typing every letter
        // individually) , this aditional step is required to refine the contactName
        if (userQueries.indexOf('type') !== -1) {

            // For ignoring spaces between the individual characters (e.g. 'r a m e s h' -&gt; 'ramesh')
            contactName = contactName.replace(" ", "");
        }
    }

    // Will be set to true if the name from the user queries is included in any contact name from the contact DB
    let contactMatchFound = nameFromContactsDB.includes(contactName);

    if (contactMatchFound) {

        // Matching contacts names (actual contact name (with all special characters) from the Contacts_DB
        // will be stored here
        matchedContacts.push(index);
    }
}


// If matched Contacts array have one or more element(s) thats mean its has some matching result.
if (matchedContacts.length &gt; 0) {

    // User will select a contact from the matching results array.
    let selectedContact = VC.options(...matchedContacts);

    // For getting the phone number from the selected contact name
    let phNumberForSelectedContact = Contacts_DB[selectedContact];

    VC.say(`Calling ${selectedContact}`); //For announcing the contact name
    call(phNumberForSelectedContact, true); //Calling the selected contact

}

//If matched Contacts array 's length is 0 thats mean no matching contacts was found.
else {
    VC.say(`Sorry! ${contactName} contact was not found in the contact list`)
};



  ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>547</code>
			<label>Auto Call Pickup</label>
			<Str sr="arg0" ve="3">%Cmd_DB5</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
 &lt;Name&gt;Auto Call Pickup&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;Automatically pick up incoming calls without manual intervention. This command is designed for working with Phone Ringing Listener Service event.&lt;/Description&gt;
 &lt;Keywords&gt;[works with Phone Ringing Listener Service event]&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[
// Auto call pickup: Automatically pick up incoming calls without manual intervention.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

//For getting ringer volume value before changing it
let old_Ringer_Vol = global("VOLR")

//For changing the ringer volume
ringerVol(0,false,false)

//For accessing the caller name from global variable "%CNAME"
let caller = global("CNAME");

//For saying the caller name
VC_apis.say(`Auto call picking up. Caller name: ${caller}`);

//For changing the ringer volume to its old value
ringerVol(parseInt(old_Ringer_Vol),false,false)

takeCall(); //For picking up incoming call


 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>547</code>
			<label>Auto Call Terminate</label>
			<Str sr="arg0" ve="3">%Cmd_DB6</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
 &lt;Name&gt;Auto Call Terminate&lt;/Name&gt;
 &lt;Version&gt;v1.0.0&lt;/Version&gt;
 &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
 &lt;Description&gt;Automatically terminate (end / reject) incoming calls without manual intervention. This command is designed for working with Phone Ringing Listener Service event.&lt;/Description&gt;
 &lt;Keywords&gt;[works with Phone Ringing Listener Service event]&lt;/Keywords&gt;
 &lt;Codes&gt;&lt;![CDATA[
// Auto Call Terminate: Automatically terminate (end / reject) incoming calls without manual intervention
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

//For getting ringer volume value before changing it
let old_Ringer_Vol = global("VOLR")

//For changing the ringer volume
ringerVol(0,false,false)

//For accessing the caller name from global variable "%CNAME"
let caller = global("CNAME");

//For saying the caller name
VC_apis.say(`Auto call terminate. Caller name: ${caller}`);

//For changing the ringer volume to its old value
ringerVol(parseInt(old_Ringer_Vol),false,false)

endCall(); //For terminating the incoming call


 ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>547</code>
			<label>Call Back</label>
			<Str sr="arg0" ve="3">%Cmd_DB7</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
  &lt;Name&gt;Call_Back&lt;/Name&gt;
  &lt;Version&gt;v1.0.0&lt;/Version&gt;
  &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
  &lt;Description&gt;Call_Back command can give the name of last dialed or received caller name or number. It can also call back the last caller.&lt;/Description&gt;
  &lt;Keywords&gt;last call, last dialed, last received, who had called, callback, dialback, who call&lt;/Keywords&gt;
  &lt;Codes&gt;&lt;![CDATA[

// Call_Back command can give the name of last dialed or received caller name or number. It can also call back the last caller.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383). You can download
// source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

let lastCallerName_in = global("CNAME"); //For getting the last received caller name
let lastCallerNum_in = global("CNUM"); //For getting the last received caller number
let lastCallerDate_in = global("CDATE"); //For getting the date of last received call
let lastCallerTime_in = global("CTIME"); //For getting the time of last received call

let lastCallerName_out = global("CONAME"); //For getting the last dialed caller name
let lastCallerNum_out = global("CONUM"); //For getting the last dialed caller number
let lastCallerDate_out = global("CODATE"); //For getting the date of last dialed call
let lastCallerTime_out = global("COTIME"); //For getting the time of last dialed call

//If 'lastCallerNum_in' or 'lastCallerNum_out' variable is set only then this function will be executed. 
if ((lastCallerNum_in !== "") || (lastCallerNum_out !== "")) {

    //For formatting the date string into more readable / audible date format and store it back
    lastCallerDate_in = VC_apis.formatDate(lastCallerDate_in);

    //For formatting the date string into more readable / audible date format and store it back
    lastCallerDate_out = VC_apis.formatDate(lastCallerDate_out);

    //For formatting the time string into more readable / audible time format and store it back
    lastCallerTime_in = VC_apis.formatTime(lastCallerTime_in);

    //For formatting the time string into more readable / audible time format and store it back
    lastCallerTime_out = VC_apis.formatTime(lastCallerTime_out);


    //For saying the last received caller / dialed caller information
    VC_apis.say(`Last received call by ${lastCallerName_in} on ${lastCallerDate_in} at ${lastCallerTime_in}.
Last dialed call to ${lastCallerName_out} on ${lastCallerDate_out} at ${lastCallerTime_out}.
Do you want to make a call back?`)


    let Yes_or_No = ["Yes", "No"]; //Available options: 'Yes' or 'No'

    let make_call_bck = VC_apis.options(...Yes_or_No); //For getting the user selected option value

    //If the user select the 'Yes' option only then the call-back is made
    if (make_call_bck === "Yes") {

        //Available options for call back types
        let call_bck_type_optns = [`Last received caller: ${lastCallerName_in}`, `Last dialed caller: ${lastCallerName_out}`];

        let selected_call_bck_type = VC_apis.options(...call_bck_type_optns); //For getting the user selected call back type option value

        //If the user select the last received caller option then the call back is made to the last received caller
        if (selected_call_bck_type === `Last received caller: ${lastCallerName_in}`) {

            VC_apis.say(`Calling ${lastCallerName_in}...`); //For saying the caller name before making the call
            call(lastCallerNum_in, true); //Calling the last received caller number
        }
        else if (selected_call_bck_type === `Last dialed caller: ${lastCallerName_out}`) {

            VC_apis.say(`Calling ${lastCallerName_out}...`); //For saying the caller name before making the call
            call(lastCallerNum_out, true); //Calling the last dialed caller number
        };

    }
    else {
        //Do nothing
    }
}
else {
    let errorMsg = `Error when trying to get the last received / dialed caller information.
May be Voice Commands does not have the appropiate permission to do that or may be there are
no last called or dialed number`
    VC_apis.say(errorMsg); //For saying our error message in case of an error
}


  ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>547</code>
			<label>Phone Ringing</label>
			<Str sr="arg0" ve="3">%Cmd_DB8</Str>
			<Str sr="arg1" ve="3"> 
&lt;vcl&gt;
  &lt;Name&gt;Phone Ringing command&lt;/Name&gt;
  &lt;Version&gt;v1.0.0&lt;/Version&gt;
  &lt;Author&gt;nirmalpaul383&lt;/Author&gt;
  &lt;Description&gt;This command is designed for working with Phone Ringing Listener Service event. Whenever there is a ongoing calling occur this command will say the caller name. (But first it must be set as Phone Ringing Listener Service command from the setting)&lt;/Description&gt;
  &lt;Keywords&gt;[works with Phone Ringing Listener Service event]&lt;/Keywords&gt;
  &lt;Codes&gt;&lt;![CDATA[
    
// Phone Ringing command is responsible for saying current caller name.
// This project is originally made by me (N Paul) (https://github.com/nirmalpaul383).
// You can download source files from my github profile https://github.com/nirmalpaul383 .
// My YouTube Page: https://www.youtube.com/channel/UCY6JY8bTlR7hZEvhy6Pldxg/
// FaceBook Page: https://www.facebook.com/a.New.Way.Technical/
// GitHub Page: https://github.com/nirmalpaul383 


//Importing and evaluating (using the Function constructor (without using the eval() function))
// Voice Control Support Library from global variable %VC_SL
new Function(global("VC_SL"))();


//For Creation of a new Voice Control Support Library object
let VC_apis = new VCSL();

// For getting ringer volume value before changing it
let old_Ringer_Vol = global("VOLR")

// For changing the ringer volume
ringerVol(0,false,false)

// For accessing the caller name from global variable "%CNAME"
let caller = global("CNAME");


// For saying the caller name during call receiving state
VC_apis.say(`Incoming call from ${caller}.
Incoming call from ${caller}.`)

// For changing the ringer volume to its old value
ringerVol(parseInt(old_Ringer_Vol),false,false)

  ]]&gt;&lt;/Codes&gt;
&lt;/vcl&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task88">
		<cdate>1740045598791</cdate>
		<edate>1740213824940</edate>
		<id>88</id>
		<nme>Default Listner Commands</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Assistant_listner_cmd</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Phone_ringing_listner_cmd</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Missed_call_listner_cmd</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Assistant_listner_cmd</Str>
			<Str sr="arg1" ve="3">%Cmd_DB1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Phone_ringing_listner_cmd</Str>
			<Str sr="arg1" ve="3">%Cmd_DB8</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Missed_call_listner_cmd</Str>
			<Str sr="arg1" ve="3">%Cmd_DB9</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task89">
		<cdate>1740046153934</cdate>
		<edate>1740046153934</edate>
		<id>89</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Assistant Preview</Str>
			<Str sr="arg2" ve="3">#FF00DAFF</Str>
			<Str sr="arg3" ve="3">#FF00DAFF</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Assistant Preview</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">Previewing</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Assistant Preview</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="400"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">VC Assistant</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Assistant Preview</Str>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="400"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>55</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Assistant Preview</Str>
			<Str sr="arg2" ve="3">#FF2CF6BE</Str>
			<Str sr="arg3" ve="3">#FF2CF6BE</Str>
		</Action>
		<Action sr="act6" ve="7">
			<code>51</code>
			<Str sr="arg0" ve="3">Voice Commands</Str>
			<Str sr="arg1" ve="3">Assistant Preview</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">∆Assistant Preview∆</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
	</Task>
	<Task sr="task9">
		<cdate>1724689159952</cdate>
		<edate>1735931069309</edate>
		<id>9</id>
		<nme>Cmd Uninstaller</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%temp</Str>
			<Str sr="arg1" ve="3">%Cmd_lst(%tap_index)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>390</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%input
Input
The text that was retrieved from the dialog&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">YesOrNo</Str>
			<Str sr="arg2" ve="3">Uninstall Command</Str>
			<Str sr="arg3" ve="3">Are you want to uninstall '%temp.Name' command?</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5">
				<var>0</var>
			</Int>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%input</lhs>
					<op>2</op>
					<rhs>yes</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Cmd_DB(%tap_index)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%Cmd_lst(%tap_index)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>369</code>
			<Str sr="arg0" ve="3">%Cmd_DB</Str>
			<Int sr="arg1" val="13"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>369</code>
			<Str sr="arg0" ve="3">%Cmd_lst</Str>
			<Int sr="arg1" val="13"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task90">
		<cdate>1740207111154</cdate>
		<edate>1740214990705</edate>
		<id>90</id>
		<nme>Custom Function Bluetooth Device Info</nme>
		<pri>100</pri>
		<Action sr="act0" ve="7">
			<code>319</code>
			<Str sr="arg0" ve="3">android.permission.BLUETOOTH</Str>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>358</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%bt_address()
Address
Bluetooth device's MAC address&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%bt_alias()
Alias
Optional bluetooth device's user given name&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%bt_battery_level()
Battery Level
% of battery available, or not set if unavailable. (Android 9+)&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%bt_class()
Class
The device's bluetooth class ID&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%bt_class_name()
Class Name
The device's bluetooth class name&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%bt_connected()
Connected
true if the BT device is connected, false otherwise&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES6&gt;%bt_encrypted()
Encrypted
true if there is at least one encrypted connection to this device, false otherwise&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES6&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES7&gt;%bt_major_class()
Major Class
The device's major bluetooth class ID&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES7&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES8&gt;%bt_major_class_name()
Major Class Name
The device's major bluetooth class name&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES8&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES9&gt;%bt_name()
Name
Bluetooth device's name&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES9&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES10&gt;%bt_paired()
Paired
true if the BT device is paired with your phone, false otherwise&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES10&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES11&gt;%bt_signal_strength()
Signal Strength
Strength of the connection in dBm. Only available for connected and scanned devices.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES11&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES12&gt;%bt_type()
Type
Could be 'classic', 'le', 'dual' or 'unknown'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES12&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Int sr="arg3" val="5"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%Bluetooth_Device_Info</Str>
			<Str sr="arg1" ve="3">{
"bt_address": "%bt_address()" ,
"bt_alias": "%bt_alias()" ,
"bt_battery_level": "%bt_battery_level()" ,
"bt_class": "%bt_class()" ,
"bt_connected": "%bt_connected()" ,
"bt_encrypted": "%bt_encrypted()" ,
"bt_major_class" : "%bt_major_class()" ,
"bt_major_class_name": "%bt_major_class_name()" ,
"bt_name": "%bt_name()" ,
"bt_paired": "%bt_paired()" ,
"bt_signal_strength": "%bt_signal_strength()" ,
"bt_type": "%bt_type()"
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task91">
		<cdate>1733644326316</cdate>
		<edate>1733644326316</edate>
		<id>91</id>
		<pri>103</pri>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">About</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
	</Task>
</TaskerData>
